{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util.js","webpack:///./src/events/eventList.js","webpack:///./src/levels/shapes.js","webpack:///./src/levels/level.js","webpack:///./src/player.js","webpack:///./src/game.js","webpack:///./src/theStairs.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","util","randomNumber","min","max","Math","floor","random","hue","trim","str","replace","[object Object]","rgba","parts","substring","indexOf","split","parseInt","this","g","b","toString","stuff","newStuff","slice","length","j","array1","array2","eventList","text","size","played","shapes","level","context","startX","startY","textBox","events","xBound","yBound","pathSize","pathX","pathY","shuffle","pathStart","path","pathGenerator2","event","seedEvent","eventIndex","beginPath","rect","fillStyle","fill","currentShapes","currentShape","validShape","push","currentShapeIndex","workingShapes","splice","unshift","playEnd","player","game","playerSize","playerX","playerY","playerSpeed","canMove","playerMoveRight","playerMoveLeft","playerMoveUp","playerMoveDown","document","addEventListener","keyDownHandler","keyUpHandler","e","keyCode","triggerEvent","canMoveWest","canvasWidth","canMoveEast","canMoveNorth","canvasHeight","canMoveSouth","groundColor","playerDirection","playerDestination","innerHTML","checkBoundary","ceil","eastMove","getImageData","data","join","moveCheck","westMove","southMove","northMove","src_game","noScroll","draw","window","scrollTo","clearRect","fillRect","drawLevel2","movePlayer","drawPlayer","requestAnimationFrame","bindKeys","gameCanvas","getElementById","getContext","currentGame","height","width","play"],"mappings":"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","file":"./dist/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const Util = {\n    \n    randomNumber(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    },\n\n    hue() {\n        //Now calls the randomColor script, used to used this function:\n        return 'rgb(' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ')';\n        // var color = randomColor();\n        // return color;\n    },\n\n    trim(str) {\n    return str.replace(/^\\s+|\\s+$/gm, '');\n    },\n\n    rgbaToHex(rgba) {\n    var parts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\n        r = parseInt(this.trim(parts[0].substring(1)), 10),\n        g = parseInt(this.trim(parts[1]), 10),\n        b = parseInt(this.trim(parts[2]), 10);\n\n    return ('#' + r.toString(16) + g.toString(16) + b.toString(16));\n    },\n\n    //shuffles moves w/ Fisher-Yates shuffle algo\n    shuffle(stuff) {\n        let newStuff = stuff.slice();\n        for (let i = stuff.length - 1; i >= 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [newStuff[i], newStuff[j]] = [newStuff[j], newStuff[i]];\n        }\n        return newStuff;\n    },\n\n    compareArrays(array1, array2) {\n        for (let i = 0; i < array1.length; i++) {\n            if (array1[i] !== array2[i]) return false;\n        }\n        return true;\n    }\n\n};\n\nexport default Util;","import Event from './event';\nimport Game from '../game.js';\n\n//event objects\nconst Welcome = {\n    name: \"Welcome\",\n    text: [`Well Nige, looks like we've nowhere to go but up.`,\n            `Yeah, it's getting pretty damn warm down here. Let's rock`\n          ],\n    size: [100,100],\n    played: false\n};\n\nconst Ending = {\n    name: \"Ending\",\n    text: [`This thing never ends, does it Nige?`,\n        `WHAT THE FUCK?!`,\n        `What the single fuck indeed.`,\n        `*They reamin silent for a moment, starting over the edge*`,\n        `So what do we do now? You got any food left?`,\n        `Nah. You?`,\n        `Nah`\n    ],\n    size: [200, 200],\n    played: false\n};\n\nconst Food = {\n    name: \"Food\",\n    text: [`How much food ya got left?`,\n        `Lemme check. *Takes off his backpack, rummages around inside* Two power bars, one bag of Oberto,\n        and most of a liter of water. You?`,\n        `A bag of halloween candy, a bag of tortilla chips, and like half a two liter of coke.`,\n        `Perfect fuel for walking up stairs huh?`,\n        `Talking about it's not gonna make it any fucking better. Let's walk.`\n    ],\n    size: [100, 200],\n    played: false\n};\n\nconst Dance = {\n    name: \"Dance\",\n    text: [`We've nowhere to go but up.`,\n        `Well, or back down.`,\n        `It's quite hot down there, as you may recall.`,\n        `Yeah. Let's keep going I guess.`\n    ],\n    size: [200, 100],\n    played: false\n};\n\n//array of all events\nconst Events = [\n    Welcome, \n    Dance,\n    Food,\n    Ending\n];\n\nexport default Events;","const Shapes = [\n    [0 ,0, 100, 100],\n    [0, 0, 200, 200],\n    [0, 0, 100, 200],\n    [0, 0, 200, 100]\n];\n\nexport default Shapes;","import Util from '../util';\nimport Events from '../events/eventList';\nimport Shapes from './shapes';\n\nclass Level {\n    constructor(context, startX = 0, startY = 0, textBox, events = Events) {\n        this.context = context;\n        this.textBox = textBox;\n        this.xBound = 900;\n        this.yBound = 600;\n        this.pathSize = 100;\n        this.pathX = this.pathSize;\n        this.pathY = this.pathSize;\n        this.shuffle = Util.shuffle.bind(this);\n        this.pathStart = [startX, startY, 100, 100];\n        this.path = this.pathGenerator2();\n        this.event = this.seedEvent(events);\n        this.eventIndex = 0;\n        // this.smallPath = new Image(100,100);\n        // this.smallPath.src = '../assets/path_sprite.png';\n        // this.bigPath = new Image(200, 200);\n        // this.bigPath.src = '../assets/path_sprite_big_square.png';\n        // this.tallPath = new Image(100, 200);\n        // this.tallPath.src = '../assets/path_sprite_long.png';\n        // this.widePath = new Image(200, 100);\n        // this.widePath.src = '../assets/path_sprite_wide.png';\n    }\n\n    // PATH ALGOS USING PREMADE SHAPES AND EVENTS\n    drawLevel2() {\n        this.context.beginPath();\n        for (let i = 0; i < this.path.length; i++) {\n            this.context.rect(this.path[i][0], this.path[i][1], this.path[i][2], this.path[i][3]);\n            this.context.fillStyle = \"rgb(224, 11, 64)\";\n            // this.context.fillStyle = this.path[i][4];\n            this.context.fill();\n            // if (Util.compareArrays(this.path[i], Shapes[0])) {\n            //     this.context.drawImage(this.smallPath, this.path[i][0], this.path[i][1], this.path[i][2], this.path[i][3]);            \n            // }\n        } \n    }\n\n    pathGenerator2() {\n        let path = [this.pathStart];\n        while (path[path.length - 1][0] + 100 < this.xBound && path[path.length - 1][1] + 100 < this.yBound) {\n            let currentShapes = this.shuffle(Shapes);\n            let currentShape = this.validShape(path, currentShapes);\n            path = path.slice();\n            path.push(currentShape);\n        }\n        return path;\n    }\n\n    validShape(path, currentShapes) {\n        let currentShapeIndex = 0;\n        let workingShapes = currentShapes.slice();\n        let currentShape;\n        let i = 0;\n        while (workingShapes[i]) {\n            if ((path[path.length - 1][0] + workingShapes[i][0]) < 0 || (path[path.length - 1][1] + workingShapes[i][1]) < 0) {\n                workingShapes.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n        if (Util.randomNumber(0,2) === 1) {\n            currentShape = [path[path.length - 1][0], path[path.length - 1][1] + path[path.length - 1][3], workingShapes[0][2], workingShapes[0][3]];\n        } else {\n            currentShape = [path[path.length - 1][0] + path[path.length - 1][2], path[path.length - 1][1], workingShapes[0][2], workingShapes[0][3]];\n\n        }\n        for (let j = 0; j < path.length; j++) {\n            if (path[j][0] === currentShape[0] && path[j][1] === currentShape[1]) {\n                currentShapeIndex += 1;\n                currentShape = [path[path.length - 1][0] + workingShapes[currentShapeIndex][0], path[path.length - 1][1] + workingShapes[currentShapeIndex][1]];\n            }\n            return currentShape;\n        }\n    }\n\n    seedEvent(events) {\n        if (events[0].played === false) {\n            events[0].size.unshift(0, 0);\n            return events[0];\n            }\n        let playEnd = true;\n        for (let j = 0; j < events.length - 1; j++) {\n            if (events[j].played === false) {\n                playEnd = false;\n            }\n        }\n        if (playEnd === true) {\n            events = events.slice(3);\n        }\n        for (let i = 0; i < this.path.length; i++) {\n            for (let j = 0; j < events.length; j++) {\n                if (j === events.length - 1 && !playEnd) continue;\n                if (this.path[i][2] === events[j].size[0] && this.path[i][3] === events[j].size[1] && events[j].played === false) {\n                    if (Util.randomNumber(0, 2) === 1) {\n                        events[j].size.unshift(this.path[i][0], this.path[i][1]);\n                        return events[j];\n                    }\n                }\n            }\n        } \n\n    }\n\n//END OF CLASS\n}\n    \nexport default Level;\n\n  /* ORIGINAL FREEFORM PATH GENERATION ALGOS\n\n    drawLevel() {\n        this.context.beginPath();\n        for (let i = 0; i < this.path.length; i++) {\n            this.context.rect(this.path[i][0], this.path[i][1], this.pathSize, this.pathSize);\n            this.context.fillStyle = \"rgb(224, 11, 64)\";\n            this.context.fill();\n        } \n    }\n\n    pathGenerator() {\n        let path = [this.pathStart];\n        let moves = [[0, this.pathSize], [this.pathSize, 0], [-this.pathSize, 0], [0, -this.pathSize]];\n        while (path[path.length - 1][0] + 100 < this.xBound && path[path.length - 1][1] + 100 < this.yBound) {\n            let shuffledMoves = this.shuffle(moves);\n            let currentMove = this.validMove(path, shuffledMoves);\n            path = path.slice();\n            path.push(currentMove);\n        }\n        console.log(path);\n        return path;\n    }\n\n    validMove(path, shuffledMoves) {\n        // remove out of bounds \n        let workingMoves = shuffledMoves.slice();\n        let currentMoveIndex = 0;\n        let i = 0;\n        while (workingMoves[i]) {\n            if ((path[path.length - 1][0] + workingMoves[i][0]) < 0 || (path[path.length - 1][1] + workingMoves[i][1]) < 0) {\n                workingMoves.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n        //check for path collision\n        let currentMove = [path[path.length - 1][0] + workingMoves[0][0], path[path.length - 1][1] + workingMoves[0][1]];\n        for (let j = 0; j < path.length; j++) {\n            if (path[j][0] === currentMove[0] && path[j][1] === currentMove[1]) {\n                currentMoveIndex += 1;\n                currentMove = [path[path.length - 1][0] + workingMoves[currentMoveIndex][0], path[path.length - 1][1] + workingMoves[currentMoveIndex][1]];\n            }\n            return currentMove;\n        }\n    }\n\n    */","import Level from './levels/level';\n\nclass Player {\n    constructor(game, name, events) {\n\n        //context\n        this.game = game;\n        this.context = game.context;\n\n        //Self\n        this.name = name;\n        this.events = events;\n        this.playerSize = 10;\n        this.playerX = 0;\n        this.playerY = 0;\n        this.playerSpeed = 10;\n\n        //events\n        this.canMove = true;\n\n        //Keys\n        this.playerMoveRight = false;\n        this.playerMoveLeft = false;\n        this.playerMoveUp = false;\n        this.playerMoveDown = false;\n    }\n\n    drawPlayer() {\n        this.context.beginPath();\n        this.context.rect(this.playerX, this.playerY, \n            this.playerSize, this.playerSize);\n        this.context.fillStyle = \"#e1e1e1\";\n        this.context.fill();\n    }\n\n    bindKeys() {\n        document.addEventListener(\"keydown\", this.keyDownHandler.bind(this));\n        document.addEventListener(\"keyup\", this.keyUpHandler.bind(this));\n    }\n\n    //Key handlers\n    keyDownHandler(e) {\n        if (e.keyCode === 39 || e.keyCode === 68) {\n            this.playerMoveRight = true;\n        }\n        if (e.keyCode === 37 || e.keyCode === 65) {\n            this.playerMoveLeft = true;\n        }\n        if (e.keyCode === 38 || e.keyCode === 87) {\n            this.playerMoveUp = true;\n        }\n        if (e.keyCode === 40 || e.keyCode === 83) {\n            this.playerMoveDown = true;\n        }\n        if (e.keyCode === 32) {\n            this.game.level.eventIndex++;\n        }\n    }\n\n    keyUpHandler(e) {\n        if (e.keyCode === 39 || e.keyCode === 68) {\n            this.playerMoveRight = false;\n        }\n        if (e.keyCode === 37 || e.keyCode === 65) {\n            this.playerMoveLeft = false;\n        }\n        if (e.keyCode === 38 || e.keyCode === 87) {\n            this.playerMoveUp = false;\n        }\n        if (e.keyCode === 40 || e.keyCode === 83) {\n            this.playerMoveDown = false;\n        }\n    }\n\n    movePlayer() {\n        if ( this.game.level.event && (this.game.level.event.size[0] <= this.playerX && this.playerX < this.game.level.event.size[0] + this.game.level.event.size[2]) &&\n            this.game.level.event.size[1] <= this.playerY && this.playerY < this.game.level.event.size[1] + this.game.level.event.size[3]) {\n                this.triggerEvent(this.game.level.event);\n            }\n        if (this.canMove) {\n            if (this.playerMoveLeft && this.playerX > 0 && this.canMoveWest()) {\n                this.playerX -= this.playerSpeed;\n                }\n            else if (this.playerMoveRight && this.playerX < this.game.canvasWidth - 10 && this.canMoveEast()) {\n                this.playerX += this.playerSpeed;\n                }\n            else if  (this.playerMoveUp && this.playerY > 0 && this.canMoveNorth()) {\n                this.playerY -= this.playerSpeed;\n            }\n            else if (this.playerMoveDown && this.playerY < this.game.canvasHeight - 10 && this.canMoveSouth()) {\n                this.playerY += this.playerSpeed;\n            }\n        }   \n    }\n\n    moveCheck(groundColor) {\n        if (groundColor === '66,134,244') return false;\n        return true;\n    }\n\n    checkBoundary(playerDirection, playerDestination) {\n        if ((playerDirection === \"right\" && playerDestination >= this.game.canvasWidth - 10) \n            || (playerDirection === \"down\" && playerDestination >= this.game.canvasHeight - 10)) {\n            return true;\n        }\n        else return false;\n    }\n\n    triggerEvent(event) {\n        if (this.game.level.eventIndex >= event.text.length) {\n            this.canMove = true;\n            event.played = true;\n            this.game.textBox.innerHTML = \"They walked on.\";\n            return false;\n        }\n        this.canMove = false;\n        this.game.textBox.innerHTML = event.text[this.game.level.eventIndex];\n    }\n\n    canMoveEast() {\n        if (this.checkBoundary(\"right\", this.playerX + 10)) {\n            this.playerX = 0;\n            this.playerY = Math.ceil(this.playerY / 100) * 100;\n            this.game.level = new Level(this.context, 0, this.playerY, this.textBox, this.events);\n        }\n        let eastMove = this.context.getImageData(this.playerX + 10, this.playerY, 1, 1).data.slice(0, 3).join(\",\");\n        return this.moveCheck(eastMove);\n    }\n\n    canMoveWest() {\n        let westMove = this.context.getImageData(this.playerX - 1, this.playerY, 1, 1).data.slice(0, 3).join(\",\");        \n        return this.moveCheck(westMove);\n    }\n\n    canMoveSouth() {\n        if (this.checkBoundary(\"down\", this.playerY + 10)) {\n            this.playerY = 0;\n            this.playerX = Math.ceil(this.playerX / 100) * 100;\n            this.game.level = new Level(this.context, this.playerX, 0, this.textBox, this.events);\n        }\n        let southMove = this.context.getImageData(this.playerX, this.playerY + 10, 1, 1).data.slice(0, 3).join(\",\");\n        return this.moveCheck(southMove);\n    }\n\n    canMoveNorth() {\n        let northMove = this.context.getImageData(this.playerX, this.playerY - 1, 1, 1).data.slice(0, 3).join(\",\");        \n        return this.moveCheck(northMove);\n    }\n\n\n// END OF CLASS\n}\n\nexport default Player;","import Player from './player';\nimport Level from './levels/level';\nimport Events from './events/eventList';\n\nclass Game {\n    constructor(context, textBox) {\n        let game = this;\n        game.context = context;\n        game.textBox = textBox;\n        game.canvasHeight = 600;\n        game.canvasWidth = 900;\n        game.player = new Player(game, \"Nigel\", game.events);\n        game.level = new Level(game.context, 0, 0, game.textBox);\n        game.noScroll = game.noScroll.bind(game);\n        game.draw = game.draw.bind(game);\n    }\n\n    //THANKS DAVID WELLS (NOT THE FAMOUS YANKEE PRESUMABLY)\n    noScroll() {\n        window.scrollTo(0, 0);\n    }\n\n    draw() {\n        this.context.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.context.fillStyle = \"rgb(66,134,244)\";\n        this.context.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.level.drawLevel2();\n        this.player.movePlayer();\n        this.player.drawPlayer();\n        requestAnimationFrame(this.draw);\n    }\n\n    play() {\n        window.addEventListener(\"scroll\", this.noScroll);\n        this.player.bindKeys();\n        this.draw();\n    }\n\n// END OF CLASS\n}\n\nexport default Game;","import Game from './game';\n// var fabric = require('fabric').fabric;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const gameCanvas = document.getElementById(\"game\");\n    const textBox = document.getElementById(\"text\");\n    const context = gameCanvas.getContext(\"2d\");\n    const currentGame = new Game(context, textBox);\n    gameCanvas.height = currentGame.canvasHeight;\n    gameCanvas.width = currentGame.canvasWidth;    \n    currentGame.play();\n    // var canvas = new fabric.Canvas('c');\n\n    // // create a rectangle object\n    // var rect = new fabric.Rect({\n    //     left: 100,\n    //     top: 100,\n    //     fill: 'red',\n    //     width: 20,\n    //     height: 20\n    // });\n\n    // // \"add\" rectangle onto canvas\n    // canvas.add(rect);\n});\n\n"],"sourceRoot":""}