{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util.js","webpack:///./src/events/text.js","webpack:///./src/events/eventList.js","webpack:///./src/levels/shapes.js","webpack:///./src/levels/level.js","webpack:///./src/player.js","webpack:///./src/game.js","webpack:///./src/theStairs.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","util","randomNumber","min","max","Math","floor","random","trim","str","replace","[object Object]","rgba","parts","substring","indexOf","split","parseInt","this","g","b","toString","stuff","newStuff","slice","length","j","events_text","eventList","text","size","played","shapes","level","context","startX","startY","textBox","events","xBound","yBound","pathSize","pathX","pathY","shuffle","pathStart","path","pathGenerator2","seedEvents","innerHTML","textSetter","eventIndex","textIndex","beginPath","rect","fillStyle","fill","currentShapes","currentShape","validShape","push","console","log","currentShapeIndex","workingShapes","splice","moves","shuffledMoves","currentMove","validMove","workingMoves","currentMoveIndex","currentEvents","unshift","player","game","playerSize","playerX","playerY","playerSpeed","canMove","playerMoveRight","playerMoveLeft","playerMoveUp","playerMoveDown","document","addEventListener","keyDownHandler","keyUpHandler","e","keyCode","triggerEvent","canMoveWest","canvasWidth","canMoveEast","canMoveNorth","canvasHeight","canMoveSouth","groundColor","playerDirection","playerDestination","event","checkBoundary","ceil","eastMove","getImageData","data","join","moveCheck","westMove","southMove","northMove","noScroll","draw","window","scrollTo","clearRect","fillRect","drawLevel2","movePlayer","drawPlayer","requestAnimationFrame","bindKeys","gameCanvas","getElementById","getContext","currentGame","height","width","play"],"mappings":"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","file":"./dist/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const Util = {\n    \n    randomNumber(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    },\n\n    trim(str) {\n    return str.replace(/^\\s+|\\s+$/gm, '');\n    },\n\n    rgbaToHex(rgba) {\n    var parts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\n        r = parseInt(this.trim(parts[0].substring(1)), 10),\n        g = parseInt(this.trim(parts[1]), 10),\n        b = parseInt(this.trim(parts[2]), 10);\n\n    return ('#' + r.toString(16) + g.toString(16) + b.toString(16));\n    },\n\n    //shuffles moves w/ Fisher-Yates shuffle algo\n    shuffle(stuff) {\n        let newStuff = stuff.slice();\n        for (let i = stuff.length - 1; i >= 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [newStuff[i], newStuff[j]] = [newStuff[j], newStuff[i]];\n        }\n        return newStuff;\n    }\n\n};\n\nexport default Util;","const Text = [\n    \"Huh, I did not see this coming.\",\n    \"I guess it's time we get to walking, eh comrade?\",\n    \"Sure. It's not like there's anything else going on down here.\",\n    \"Just everything being consumed in flames?\",\n    \"Yeah, that. At least this seems to be leading away from them.\",\n    \"Yeah. Let's fuckin' go.\"\n];\n\nexport default Text;","import Event from './event';\nimport Game from '../game.js';\n\n\n\n//event objects\nconst Welcome = {\n    name: \"Welcome\",\n    text: [`Well Nige, looks like we've nowhere to go but up.`,\n            `Yeah, it's getting pretty damn warm down here. Let's rock`\n          ],\n    size: [100,100],\n    played: false\n};\n\nconst Ending = {\n    name: \"Ending\",\n    text: [`Well Nige, looks like we've nowhere else to go.`,\n        `WHAT THE FUCK?!`,\n        `What the single fuck indeed.`,\n        `*They reamin silent for a moment, starting over the edge*`,\n        `So what do we do now? You got any food left?`,\n        `Nah. You?`,\n        `Nah`,\n        ``\n    ],\n    size: [200, 200],\n    played: false\n};\n\nconst Food = {\n    name: \"Food\",\n    text: [`How much food ya got left?`,\n        `Lemme check. *Takes off his backpack, rummages around inside* Two power bars, one bag of Oberto,\n        and most of a liter of water. You?`,\n        `A bag of halloween candy, a bag of tortilla chips, and like half a two liter of coke.`,\n        `Perfect fuel for walking up stairs huh?`,\n        `Talking about it's not gonna make it any fucking better. Let's walk.`\n    ],\n    size: [100, 200],\n    played: false\n};\n\nconst Dance = {\n    name: \"Dance\",\n    text: [`Well Nige, looks like we've nowhere to go but up.`,\n        `Yeah, it's getting pretty damn warm down here. Let's rock`\n    ],\n    size: [200, 100],\n    played: false\n};\n\n//array of all events\nconst Events = [\n    Welcome, \n    Ending,\n    Dance,\n    Food\n];\n\nexport default Events;","const Shapes = [\n    [0 ,0, 100, 100],\n    [0, 0, 200, 200],\n    [0, 0, 100, 200],\n    [0, 0, 200, 100]\n];\n\nexport default Shapes;","import Util from '../util';\nimport Text from '../events/text';\nimport Events from '../events/eventList';\nimport Shapes from './shapes';\n\nclass Level {\n    constructor(context, startX = 0, startY = 0, textBox, events = Events) {\n        this.context = context;\n        this.textBox = textBox;\n        this.xBound = 900;\n        this.yBound = 500;\n        this.pathSize = 100;\n        this.pathX = this.pathSize;\n        this.pathY = this.pathSize;\n        this.shuffle = Util.shuffle.bind(this);\n        this.pathStart = [startX, startY, 100, 100];\n        this.path = this.pathGenerator2();\n        this.events = this.seedEvents(events);\n        this.textBox.innerHTML = this.textSetter();\n        this.eventIndex = 0;\n    }\n\n    textSetter(textIndex) {\n        if (Text[textIndex]) return Text[textIndex];\n        return \"That's all the text so far.\";\n    }\n\n    // freeform\n    drawLevel() {\n        this.context.beginPath();\n        for (let i = 0; i < this.path.length; i++) {\n            this.context.rect(this.path[i][0], this.path[i][1], this.pathSize, this.pathSize);\n            this.context.fillStyle = \"rgb(224, 11, 64)\";\n            this.context.fill();\n        } \n    }\n\n    // with premade shapes\n    drawLevel2() {\n        this.context.beginPath();\n        for (let i = 0; i < this.path.length; i++) {\n            this.context.rect(this.path[i][0], this.path[i][1], this.path[i][2], this.path[i][3]);\n            this.context.fillStyle = \"rgb(224, 11, 64)\";\n            this.context.fill();\n        } \n    }\n\n    pathGenerator2() {\n        let path = [this.pathStart];\n        while (path[path.length - 1][0] + 100 < this.xBound && path[path.length - 1][1] + 100 < this.yBound) {\n            let currentShapes = this.shuffle(Shapes);\n            let currentShape = this.validShape(path, currentShapes);\n            path = path.slice();\n            path.push(currentShape);\n        }\n        console.log(path);\n        return path;\n    }\n\n    validShape(path, currentShapes) {\n        let currentShapeIndex = 0;\n        let workingShapes = currentShapes.slice();\n        let currentShape;\n        let i = 0;\n        while (workingShapes[i]) {\n            if ((path[path.length - 1][0] + workingShapes[i][0]) < 0 || (path[path.length - 1][1] + workingShapes[i][1]) < 0) {\n                workingShapes.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n        if (Util.randomNumber(0,2) === 1) {\n            currentShape = [path[path.length - 1][0], path[path.length - 1][1] + path[path.length - 1][3], workingShapes[0][2], workingShapes[0][3]];\n        } else {\n            currentShape = [path[path.length - 1][0] + path[path.length - 1][2], path[path.length - 1][1], workingShapes[0][2], workingShapes[0][3]];\n\n        }\n        for (let j = 0; j < path.length; j++) {\n            if (path[j][0] === currentShape[0] && path[j][1] === currentShape[1]) {\n                currentShapeIndex += 1;\n                currentShape = [path[path.length - 1][0] + workingShapes[currentShapeIndex][0], path[path.length - 1][1] + workingShapes[currentShapeIndex][1]];\n            }\n            return currentShape;\n        }\n    }\n\n    pathGenerator() {\n        let path = [this.pathStart];\n        let moves = [[0, this.pathSize], [this.pathSize, 0], [-this.pathSize, 0], [0, -this.pathSize]];\n        while (path[path.length - 1][0] + 100 < this.xBound && path[path.length - 1][1] + 100 < this.yBound) {\n            let shuffledMoves = this.shuffle(moves);\n            let currentMove = this.validMove(path, shuffledMoves);\n            path = path.slice();\n            path.push(currentMove);\n            }\n        console.log(path);\n        return path;\n    }\n\n    validMove(path, shuffledMoves) {\n        // remove out of bounds \n        let workingMoves = shuffledMoves.slice();\n        let currentMoveIndex = 0;\n        let i = 0;\n        while (workingMoves[i]) {\n            if ((path[path.length - 1][0] + workingMoves[i][0]) < 0 || (path[path.length - 1][1] + workingMoves[i][1]) < 0) {\n                workingMoves.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n        //check for path collision\n        let currentMove = [path[path.length - 1][0] + workingMoves[0][0], path[path.length - 1][1] + workingMoves[0][1]];\n        for (let j = 0; j < path.length; j++) {\n                if (path[j][0] === currentMove[0] && path[j][1] === currentMove[1]) {\n                    currentMoveIndex += 1;\n                    currentMove = [path[path.length - 1][0] + workingMoves[currentMoveIndex][0], path[path.length - 1][1] + workingMoves[currentMoveIndex][1]];\n            }\n        return currentMove;\n        }\n    }\n\n    /* seeding procedure:\n    1. create empty event list\n    2. iterate over path\n        A. iterate through events\n        B. if path element has an eligible event by size:\n            a. add the events coords, size, and the event itself to the event list\n    */\n    seedEvents(events) {\n        const currentEvents = [];\n        if (events[0].played === false) {\n            events[0].played = true;\n            events[0].size.unshift(0, 0);\n            currentEvents.push(events[0]);\n            return currentEvents;\n            }\n        for (let i = 0; i < this.path.length; i++) {\n            for (let j = 0; j < events.length; j++) {\n                if (this.path[i][2] === events[j].size[0] && this.path[i][3] === events[j].size[1] && events[j].played === false) {\n                    if (Util.randomNumber(0, 2) === 1) {\n                        events[j].size.unshift(this.path[i][0], this.path[i][1]);\n                        events[j].played = true;\n                        currentEvents.push([events[j]]);\n                    }\n                }\n            }\n        } \n        console.log(currentEvents);\n        return currentEvents;\n    }\n\n//END OF CLASS\n}\n    \n\n\nexport default Level;","import Level from './levels/level';\n\nclass Player {\n    constructor(game, name, events) {\n\n        //context\n        this.game = game;\n        this.context = game.context;\n\n        //Self\n        this.name = name;\n        this.events = events;\n        this.playerSize = 10;\n        this.playerX = 0;\n        this.playerY = 0;\n        this.playerSpeed = 10;\n\n        //events\n        this.canMove = true;\n\n        //Keys\n        this.playerMoveRight = false;\n        this.playerMoveLeft = false;\n        this.playerMoveUp = false;\n        this.playerMoveDown = false;\n    }\n\n    drawPlayer() {\n        this.context.beginPath();\n        this.context.rect(this.playerX, this.playerY, this.playerSize, this.playerSize);\n        this.context.fillStyle = \"#e1e1e1\";\n        this.context.fill();\n    }\n\n    bindKeys() {\n        document.addEventListener(\"keydown\", this.keyDownHandler.bind(this));\n        document.addEventListener(\"keyup\", this.keyUpHandler.bind(this));\n    }\n\n    //Key handlers\n    keyDownHandler(e) {\n        if (e.keyCode === 39 || e.keyCode === 68) {\n            this.playerMoveRight = true;\n        }\n        if (e.keyCode === 37 || e.keyCode === 65) {\n            this.playerMoveLeft = true;\n        }\n        if (e.keyCode === 38 || e.keyCode === 87) {\n            this.playerMoveUp = true;\n        }\n        if (e.keyCode === 40 || e.keyCode === 83) {\n            this.playerMoveDown = true;\n        }\n        if (e.keyCode === 32) {\n            this.game.level.eventIndex++;\n        }\n    }\n\n    keyUpHandler(e) {\n        if (e.keyCode === 39 || e.keyCode === 68) {\n            this.playerMoveRight = false;\n        }\n        if (e.keyCode === 37 || e.keyCode === 65) {\n            this.playerMoveLeft = false;\n        }\n        if (e.keyCode === 38 || e.keyCode === 87) {\n            this.playerMoveUp = false;\n        }\n        if (e.keyCode === 40 || e.keyCode === 83) {\n            this.playerMoveDown = false;\n        }\n    }\n\n    movePlayer() {\n        for (let i = 0; i < this.game.level.events.length; i++) {\n            if ((this.game.level.events[i].size[0] <= this.playerX && this.playerX < this.game.level.events[i].size[0] + this.game.level.events[i].size[2]) &&\n                this.game.level.events[i].size[1] <= this.playerY && this.playerY < this.game.level.events[i].size[1] + this.game.level.events[i].size[3]) {\n                    this.triggerEvent(this.game.level.events[i]);\n                }\n        }\n        if (this.playerMoveLeft && this.playerX > 0 && this.canMoveWest()) {\n            this.playerX -= this.playerSpeed;\n            }\n        else if (this.playerMoveRight && this.playerX < this.game.canvasWidth - 10 && this.canMoveEast()) {\n            this.playerX += this.playerSpeed;\n            }\n        else if  (this.playerMoveUp && this.playerY > 0 && this.canMoveNorth()) {\n            this.playerY -= this.playerSpeed;\n        }\n        else if (this.playerMoveDown && this.playerY < this.game.canvasHeight - 10 && this.canMoveSouth()) {\n            this.playerY += this.playerSpeed;\n        }\n    }\n\n    moveCheck(groundColor) {\n        if (groundColor !== \"224,11,64\") return false;\n        return true;\n    }\n\n    checkBoundary(playerDirection, playerDestination) {\n        if ((playerDirection === \"right\" && playerDestination >= this.game.canvasWidth - 10) \n            || (playerDirection === \"down\" && playerDestination >= this.game.canvasHeight - 10)) {\n            return true;\n        }\n        else return false;\n    }\n\n    triggerEvent(event) {\n        console.log(this.game.level.eventIndex);\n        if (this.game.level.eventIndex >= event.text.length) {\n            console.log(\"in here\");\n            this.canMove = true;\n            this.game.textBox.innerHTML = \"They walked on.\";\n            return false;\n        }\n        this.canMove = false;\n        this.game.textBox.innerHTML = event.text[this.game.level.eventIndex];\n    }\n\n    canMoveEast() {\n        if (this.checkBoundary(\"right\", this.playerX + 10)) {\n            this.playerX = 0;\n            this.playerY = Math.ceil(this.playerY / 100) * 100;\n            this.game.level = new Level(this.context, 0, this.playerY, this.textBox, this.events);\n        }\n        let eastMove = this.context.getImageData(this.playerX + 10, this.playerY, 1, 1).data.slice(0, 3).join(\",\");\n        return this.moveCheck(eastMove);\n    }\n\n    canMoveWest() {\n        let westMove = this.context.getImageData(this.playerX - 1, this.playerY, 1, 1).data.slice(0, 3).join(\",\");        \n        return this.moveCheck(westMove);\n    }\n\n    canMoveSouth() {\n        if (this.checkBoundary(\"down\", this.playerY + 10)) {\n            this.playerY = 0;\n            this.playerX = Math.ceil(this.playerX / 100) * 100;\n            this.game.level = new Level(this.context, this.playerX, 0, this.textBox, this.events);\n        }\n        let southMove = this.context.getImageData(this.playerX, this.playerY + 10, 1, 1).data.slice(0, 3).join(\",\");        \n        return this.moveCheck(southMove);\n    }\n\n    canMoveNorth() {\n        let northMove = this.context.getImageData(this.playerX, this.playerY - 1, 1, 1).data.slice(0, 3).join(\",\");        \n        return this.moveCheck(northMove);\n    }\n\n\n// END OF CLASS\n}\n\nexport default Player;","import Player from './player';\nimport Level from './levels/level';\nimport Events from './events/eventList';\n\nclass Game {\n    constructor(context, textBox) {\n        this.context = context;\n        this.textBox = textBox;\n        this.canvasHeight = 500;\n        this.canvasWidth = 900;\n        this.player = new Player(this, \"Nigel\", this.events);\n        this.level = new Level(this.context, 0, 0, this.textBox);\n        this.noScroll = this.noScroll.bind(this);\n        this.draw = this.draw.bind(this);\n    }\n\n    //THANKS DAVID WELLS (NOT THE FAMOUS YANKEE PRESUMABLY)\n    noScroll() {\n        window.scrollTo(0, 0);\n    }\n\n    draw() {\n        this.context.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.context.fillStyle = 'blue';\n        this.context.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.level.drawLevel2();\n        this.player.movePlayer();\n        this.player.drawPlayer();\n        requestAnimationFrame(this.draw);\n    }\n\n    play() {\n        window.addEventListener(\"scroll\", this.noScroll);\n        this.player.bindKeys();\n        this.draw();\n    }\n\n// END OF CLASS\n}\n\nexport default Game;","import Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const gameCanvas = document.getElementById(\"game\");\n    const textBox = document.getElementById(\"text\");\n    const context = gameCanvas.getContext(\"2d\");\n    const currentGame = new Game(context, textBox);\n    gameCanvas.height = currentGame.canvasHeight;\n    gameCanvas.width = currentGame.canvasWidth;    \n    currentGame.play();\n});\n\n"],"sourceRoot":""}