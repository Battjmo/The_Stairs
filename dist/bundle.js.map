{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/player.js","webpack:///./src/levels/level.js","webpack:///./src/game.js","webpack:///./src/theStairs.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","player","[object Object]","game","this","context","playerSize","playerX","playerY","playerSpeed","playerMoveRight","playerMoveLeft","playerMoveUp","playerMoveDown","beginPath","rect","fillStyle","fill","document","addEventListener","keyDownHandler","keyUpHandler","e","keyCode","console","log","onPath","canvasWidth","canvasHeight","str","replace","rgba","parts","substring","indexOf","split","parseInt","trim","g","b","toString","currentColor","getImageData","data","slice","rgbaToHex","join","level","xBound","yBound","pathSize","pathX","pathY","pathStart","shuffle","path","pathGenerator","length","moves","newMoves","j","Math","floor","random","shuffledMoves","currentMove","validMove","push","workingMoves","currentMoveIndex","forEach","element","splice","window","scrollTo","clearRect","drawLevel","movePlayer","drawPlayer","requestAnimationFrame","draw","location","noScroll","bindKeys","gameCanvas","getElementById","getContext","currentGame","height","width","play"],"mappings":"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","file":"./dist/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class Player {\n    constructor(game, name) {\n\n        //context\n        this.game = game;\n        this.context = game.context;\n\n        //Self\n        this.name = name;\n        this.playerSize = 10;\n        this.playerX = 0;\n        this.playerY = 0;\n        this.playerSpeed = 10;\n\n        //Keys\n        this.playerMoveRight = false;\n        this.playerMoveLeft = false;\n        this.playerMoveUp = false;\n        this.playerMoveDown = false;\n    }\n\n    drawPlayer() {\n        this.context.beginPath();\n        this.context.rect(this.playerX, this.playerY, this.playerSize, this.playerSize);\n        this.context.fillStyle = \"#e1e1e1\";\n        this.context.fill();\n    }\n\n    bindKeys() {\n        document.addEventListener(\"keydown\", this.keyDownHandler.bind(this));\n        document.addEventListener(\"keyup\", this.keyUpHandler.bind(this));\n    }\n\n    //Key handlers\n    keyDownHandler(e) {\n        if (e.keyCode === 39) {\n            this.playerMoveRight = true;\n        }\n        if (e.keyCode === 37) {\n            this.playerMoveLeft = true;\n        }\n        if (e.keyCode === 38) {\n            this.playerMoveUp = true;\n        }\n        if (e.keyCode === 40) {\n            this.playerMoveDown = true;\n        }\n    }\n\n    keyUpHandler(e) {\n        if (e.keyCode === 39) {\n            this.playerMoveRight = false;\n        }\n        if (e.keyCode === 37) {\n            this.playerMoveLeft = false;\n        }\n        if (e.keyCode === 38) {\n            this.playerMoveUp = false;\n        }\n        if (e.keyCode === 40) {\n            this.playerMoveDown = false;\n        }\n    }\n\n    movePlayer() {\n        if (this.playerMoveLeft && this.playerX > 0) {\n            this.playerX -= this.playerSpeed;\n            console.log(this.onPath())\n        }\n        if (this.playerMoveRight && this.playerX < this.game.canvasWidth - 10) {\n            this.playerX += this.playerSpeed;\n        }\n        if (this.playerMoveUp && this.playerY > 0) {\n            this.playerY -= this.playerSpeed;\n        }\n        if (this.playerMoveDown && this.playerY < this.game.canvasHeight - 10) {\n            this.playerY += this.playerSpeed;\n        }\n    }\n\n    trim(str) {\n    return str.replace(/^\\s+|\\s+$/gm, '');\n}\n\n    rgbaToHex(rgba) {\n    var parts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\n        r = parseInt(this.trim(parts[0].substring(1)), 10),\n        g = parseInt(this.trim(parts[1]), 10),\n        b = parseInt(this.trim(parts[2]), 10);\n\n        return ('#' + r.toString(16) + g.toString(16) + b.toString(16));\n}\n\n    onPath() {\n        let imageData = this.context.getImageData(this.playerX, this.playerY, this.playerSize, this.playerSize);\n        let currentColor = imageData.data.slice(0, 3);\n        currentColor = this.rgbaToHex(currentColor.join(\", \"));\n        if (currentColor == \"e1e1e1\") return true;\n        return false;\n    }\n}\n\nexport default Player;","import Util from '../util';\n\nclass Level {\n    constructor(context) {\n        this.context = context;\n        this.xBound = 900;\n        this.yBound = 700;\n        this.pathSize = 100;\n        this.pathX = this.pathSize;\n        this.pathY = this.pathSize;\n        this.pathStart = [0, 0];\n        this.shuffle = this.shuffle.bind(this);\n        // this.validPath = this.validPath.bind(this);\n        this.path = this.pathGenerator();\n    }\n\n    drawLevel() {\n        this.context.beginPath();\n        for (let i = 0; i < this.path.length; i++) {\n            this.context.rect(this.path[i][0], this.path[i][1], this.pathSize, this.pathSize);\n            this.context.fillStyle = \"#e83030\";\n            this.context.fill();\n        } \n    }\n\n    //shuffles moves w/ Fisher-Yates shuffle algo\n    shuffle(moves) {\n        let newMoves = moves.slice();\n        for (let i = moves.length - 1; i >= 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [newMoves[i], newMoves[j]] = [newMoves[j], newMoves[i]];\n        }\n        return newMoves;\n    }\n\n    pathGenerator() {\n        let path = [this.pathStart];\n        let moves = [[0, this.pathSize], [this.pathSize, 0], [-this.pathSize, 0], [0, -this.pathSize]];\n        console.log(path[path.length - 1][0] + 100);\n        while (path[path.length - 1][0] + 100 < this.xBound && path[path.length - 1][1] + 100 < this.yBound) {\n            let shuffledMoves = this.shuffle(moves);\n            console.log(path);\n            let currentMove = this.validMove(path, shuffledMoves);\n            path = path.slice();\n            path.push(currentMove);\n            console.log(path);\n            }\n        return path;\n    }\n\n    validMove(path, shuffledMoves) {\n        // remove out of bounds \n        let workingMoves = shuffledMoves.slice();\n        // workingMoves.forEach((element) => {\n        //     console.log(element);\n        // });\n        let currentMoveIndex = 0;\n        // for (let index = 0; index < workingMoves.length; index++) {\n        //     console.log(path[path.length - 1][0] + workingMoves[index][0], path[path.length - 1][1] + workingMoves[index][1])\n            // if ((path[path.length - 1][0] + workingMoves[index][0]) < 0 || (path[path.length - 1][1] + workingMoves[index][1]) < 0) {\n            //     workingMoves.splice(index, 1);\n            // }\n        // } \n        workingMoves.forEach((element) => {\n            if ((path[path.length - 1][0] + element[0]) < 0 || (path[path.length - 1][1] + element[1]) < 0) {\n                workingMoves.splice(workingMoves.indexOf(element), 1);\n            }\n        });\n        console.log(\"working moves: \", workingMoves);\n        //check for path collision\n        let currentMove = [path[path.length - 1][0] + workingMoves[0][0], path[path.length - 1][1] + workingMoves[0][1]];\n        for (let j = 0; j < path.length; j++) {\n                if (path[j][0] === currentMove[0] && path[j][1] === currentMove[1]) {\n                    console.log(\"in here\");\n                    console.log(currentMoveIndex);\n                    currentMoveIndex++;\n                    console.log(workingMoves[currentMoveIndex]);\n                    currentMove = [path[path.length - 1][0] + workingMoves[currentMoveIndex][0], path[path.length - 1][1] + workingMoves[currentMoveIndex][1]];\n            }\n        return currentMove;\n    }\n}\n    //     for (let i = path.length - 4; i < path.length - 1; i++) {\n    //         if (path[i]) {\n    //             for (let j = 0; j < 2; j++) {\n    //                 console.log(path[i][j]);\n    //                 if (path[i][j] === currentMove[j]) {\n    //                     console.log(\"invalid move\");\n    //                     return false;\n    //                 }\n    //             }\n    //         }\n    //     }\n    //     return true;\n\n    \n}\n    \n    //END OF CLASS\n\nexport default Level;","import Player from './player';\nimport Level from './levels/level';\n\nclass Game {\n    constructor(context) {\n        this.context = context;\n        this.canvasHeight = 700;\n        this.canvasWidth = 900;\n        this.player = new Player(this, \"Nigel\");\n        this.level = new Level(this.context);\n    }\n\n    //THANKS DAVID WELLS (NOT THE FAMOUS YANKEE PRESUMABLY)\n    noScroll() {\n        window.scrollTo(0, 0);\n    }\n\n    draw() {\n        this.context.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.level.drawLevel();\n        this.player.movePlayer();\n        this.player.drawPlayer();\n        requestAnimationFrame(this.draw.bind(this));\n    }\n\n    movePlayer() {\n            if (this.player.playerMoveLeft && this.player.playerX > 0) {\n                this.player.playerX -= this.player.playerSpeed;\n            }\n            if (this.player.playerMoveRight && this.player.playerX < this.canvasWidth - 10) {\n                this.player.playerX += this.player.playerSpeed;\n            }\n            if (this.player.playerMoveUp && this.player.playerY > 0) {\n                this.player.playerY -= this.player.playerSpeed;\n            }\n            if (this.player.playerMoveDown && this.player.playerY < this.canvasHeight - 10) {\n                this.player.playerY += this.player.playerSpeed;\n        }\n    }\n\n    compareColor(location) {\n        \n    }\n\n    play() {\n        window.addEventListener(\"scroll\", this.noScroll.bind(this));\n        this.player.bindKeys();\n        this.draw();\n    }\n}\n\n\n\nexport default Game;","import Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const gameCanvas = document.getElementById(\"game\");\n    const context = gameCanvas.getContext(\"2d\");\n    const currentGame = new Game(context);\n    gameCanvas.height = currentGame.canvasHeight;\n    gameCanvas.width = currentGame.canvasWidth;\n    currentGame.play();\n});\n\n"],"sourceRoot":""}