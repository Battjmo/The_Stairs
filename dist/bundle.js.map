{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util.js","webpack:///./src/events/eventList.js","webpack:///./src/levels/shapes.js","webpack:///./src/levels/level.js","webpack:///./src/player.js","webpack:///./src/game.js","webpack:///./src/theStairs.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","util","randomNumber","min","max","Math","floor","random","trim","str","replace","[object Object]","rgba","parts","substring","indexOf","split","parseInt","this","g","b","toString","stuff","newStuff","slice","length","j","eventList","text","size","played","shapes","level","context","startX","startY","textBox","events","xBound","yBound","pathSize","pathX","pathY","shuffle","pathStart","path","pathGenerator2","seedEvents","eventIndex","beginPath","rect","fillStyle","fill","currentShapes","currentShape","validShape","push","console","log","currentShapeIndex","workingShapes","splice","moves","shuffledMoves","currentMove","validMove","workingMoves","currentMoveIndex","currentEvents","unshift","player","game","playerSize","playerX","playerY","playerSpeed","canMove","playerMoveRight","playerMoveLeft","playerMoveUp","playerMoveDown","document","addEventListener","keyDownHandler","keyUpHandler","e","keyCode","triggerEvent","canMoveWest","canvasWidth","canMoveEast","canMoveNorth","canvasHeight","canMoveSouth","groundColor","playerDirection","playerDestination","event","innerHTML","checkBoundary","ceil","eastMove","getImageData","data","join","moveCheck","westMove","southMove","northMove","noScroll","draw","window","scrollTo","clearRect","fillRect","drawLevel2","movePlayer","drawPlayer","requestAnimationFrame","bindKeys","gameCanvas","getElementById","getContext","currentGame","height","width","play"],"mappings":"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","file":"./dist/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const Util = {\n    \n    randomNumber(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    },\n\n    trim(str) {\n    return str.replace(/^\\s+|\\s+$/gm, '');\n    },\n\n    rgbaToHex(rgba) {\n    var parts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\n        r = parseInt(this.trim(parts[0].substring(1)), 10),\n        g = parseInt(this.trim(parts[1]), 10),\n        b = parseInt(this.trim(parts[2]), 10);\n\n    return ('#' + r.toString(16) + g.toString(16) + b.toString(16));\n    },\n\n    //shuffles moves w/ Fisher-Yates shuffle algo\n    shuffle(stuff) {\n        let newStuff = stuff.slice();\n        for (let i = stuff.length - 1; i >= 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [newStuff[i], newStuff[j]] = [newStuff[j], newStuff[i]];\n        }\n        return newStuff;\n    }\n\n};\n\nexport default Util;","import Event from './event';\nimport Game from '../game.js';\n\n\n\n//event objects\nconst Welcome = {\n    name: \"Welcome\",\n    text: [`Well Nige, looks like we've nowhere to go but up.`,\n            `Yeah, it's getting pretty damn warm down here. Let's rock`\n          ],\n    size: [100,100],\n    played: false\n};\n\nconst Ending = {\n    name: \"Ending\",\n    text: [`Well Nige, looks like we've nowhere else to go.`,\n        `WHAT THE FUCK?!`,\n        `What the single fuck indeed.`,\n        `*They reamin silent for a moment, starting over the edge*`,\n        `So what do we do now? You got any food left?`,\n        `Nah. You?`,\n        `Nah`,\n        ``\n    ],\n    size: [200, 200],\n    played: false\n};\n\nconst Food = {\n    name: \"Food\",\n    text: [`How much food ya got left?`,\n        `Lemme check. *Takes off his backpack, rummages around inside* Two power bars, one bag of Oberto,\n        and most of a liter of water. You?`,\n        `A bag of halloween candy, a bag of tortilla chips, and like half a two liter of coke.`,\n        `Perfect fuel for walking up stairs huh?`,\n        `Talking about it's not gonna make it any fucking better. Let's walk.`\n    ],\n    size: [100, 200],\n    played: false\n};\n\nconst Dance = {\n    name: \"Dance\",\n    text: [`Well Nige, looks like we've nowhere to go but up.`,\n        `Yeah, it's getting pretty damn warm down here. Let's rock`\n    ],\n    size: [200, 100],\n    played: false\n};\n\n//array of all events\nconst Events = [\n    Welcome, \n    Ending,\n    Dance,\n    Food\n];\n\nexport default Events;","const Shapes = [\n    [0 ,0, 100, 100],\n    [0, 0, 200, 200],\n    [0, 0, 100, 200],\n    [0, 0, 200, 100]\n];\n\nexport default Shapes;","import Util from '../util';\nimport Text from '../events/text';\nimport Events from '../events/eventList';\nimport Shapes from './shapes';\n\nclass Level {\n    constructor(context, startX = 0, startY = 0, textBox, events = Events) {\n        this.context = context;\n        this.textBox = textBox;\n        this.xBound = 900;\n        this.yBound = 500;\n        this.pathSize = 100;\n        this.pathX = this.pathSize;\n        this.pathY = this.pathSize;\n        this.shuffle = Util.shuffle.bind(this);\n        this.pathStart = [startX, startY, 100, 100];\n        this.path = this.pathGenerator2();\n        this.events = this.seedEvents(events);\n        this.eventIndex = 0;\n    }\n\n    // freeform\n    drawLevel() {\n        this.context.beginPath();\n        for (let i = 0; i < this.path.length; i++) {\n            this.context.rect(this.path[i][0], this.path[i][1], this.pathSize, this.pathSize);\n            this.context.fillStyle = \"rgb(224, 11, 64)\";\n            this.context.fill();\n        } \n    }\n\n    // with premade shapes\n    drawLevel2() {\n        this.context.beginPath();\n        for (let i = 0; i < this.path.length; i++) {\n            this.context.rect(this.path[i][0], this.path[i][1], this.path[i][2], this.path[i][3]);\n            this.context.fillStyle = \"rgb(224, 11, 64)\";\n            this.context.fill();\n        } \n    }\n\n    pathGenerator2() {\n        let path = [this.pathStart];\n        while (path[path.length - 1][0] + 100 < this.xBound && path[path.length - 1][1] + 100 < this.yBound) {\n            let currentShapes = this.shuffle(Shapes);\n            let currentShape = this.validShape(path, currentShapes);\n            path = path.slice();\n            path.push(currentShape);\n        }\n        console.log(path);\n        return path;\n    }\n\n    validShape(path, currentShapes) {\n        let currentShapeIndex = 0;\n        let workingShapes = currentShapes.slice();\n        let currentShape;\n        let i = 0;\n        while (workingShapes[i]) {\n            if ((path[path.length - 1][0] + workingShapes[i][0]) < 0 || (path[path.length - 1][1] + workingShapes[i][1]) < 0) {\n                workingShapes.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n        if (Util.randomNumber(0,2) === 1) {\n            currentShape = [path[path.length - 1][0], path[path.length - 1][1] + path[path.length - 1][3], workingShapes[0][2], workingShapes[0][3]];\n        } else {\n            currentShape = [path[path.length - 1][0] + path[path.length - 1][2], path[path.length - 1][1], workingShapes[0][2], workingShapes[0][3]];\n\n        }\n        for (let j = 0; j < path.length; j++) {\n            if (path[j][0] === currentShape[0] && path[j][1] === currentShape[1]) {\n                currentShapeIndex += 1;\n                currentShape = [path[path.length - 1][0] + workingShapes[currentShapeIndex][0], path[path.length - 1][1] + workingShapes[currentShapeIndex][1]];\n            }\n            return currentShape;\n        }\n    }\n\n    pathGenerator() {\n        let path = [this.pathStart];\n        let moves = [[0, this.pathSize], [this.pathSize, 0], [-this.pathSize, 0], [0, -this.pathSize]];\n        while (path[path.length - 1][0] + 100 < this.xBound && path[path.length - 1][1] + 100 < this.yBound) {\n            let shuffledMoves = this.shuffle(moves);\n            let currentMove = this.validMove(path, shuffledMoves);\n            path = path.slice();\n            path.push(currentMove);\n            }\n        console.log(path);\n        return path;\n    }\n\n    validMove(path, shuffledMoves) {\n        // remove out of bounds \n        let workingMoves = shuffledMoves.slice();\n        let currentMoveIndex = 0;\n        let i = 0;\n        while (workingMoves[i]) {\n            if ((path[path.length - 1][0] + workingMoves[i][0]) < 0 || (path[path.length - 1][1] + workingMoves[i][1]) < 0) {\n                workingMoves.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n        //check for path collision\n        let currentMove = [path[path.length - 1][0] + workingMoves[0][0], path[path.length - 1][1] + workingMoves[0][1]];\n        for (let j = 0; j < path.length; j++) {\n                if (path[j][0] === currentMove[0] && path[j][1] === currentMove[1]) {\n                    currentMoveIndex += 1;\n                    currentMove = [path[path.length - 1][0] + workingMoves[currentMoveIndex][0], path[path.length - 1][1] + workingMoves[currentMoveIndex][1]];\n            }\n        return currentMove;\n        }\n    }\n\n    /* seeding procedure:\n    1. create empty event list\n    2. iterate over path\n        A. iterate through events\n        B. if path element has an eligible event by size:\n            a. add the events coords, size, and the event itself to the event list\n    */\n    seedEvents(events) {\n        const currentEvents = [];\n        if (events[0].played === false) {\n            events[0].played = true;\n            events[0].size.unshift(0, 0);\n            currentEvents.push(events[0]);\n            return currentEvents;\n            }\n        for (let i = 0; i < this.path.length; i++) {\n            for (let j = 0; j < events.length; j++) {\n                if (this.path[i][2] === events[j].size[0] && this.path[i][3] === events[j].size[1] && events[j].played === false) {\n                    if (Util.randomNumber(0, 2) === 1) {\n                        events[j].size.unshift(this.path[i][0], this.path[i][1]);\n                        events[j].played = true;\n                        currentEvents.push(events[j]);\n                    }\n                }\n            }\n        } \n        console.log(currentEvents);\n        return currentEvents;\n    }\n\n//END OF CLASS\n}\n    \n\n\nexport default Level;","import Level from './levels/level';\n\nclass Player {\n    constructor(game, name, events) {\n\n        //context\n        this.game = game;\n        this.context = game.context;\n\n        //Self\n        this.name = name;\n        this.events = events;\n        this.playerSize = 10;\n        this.playerX = 0;\n        this.playerY = 0;\n        this.playerSpeed = 10;\n\n        //events\n        this.canMove = true;\n\n        //Keys\n        this.playerMoveRight = false;\n        this.playerMoveLeft = false;\n        this.playerMoveUp = false;\n        this.playerMoveDown = false;\n    }\n\n    drawPlayer() {\n        this.context.beginPath();\n        this.context.rect(this.playerX, this.playerY, this.playerSize, this.playerSize);\n        this.context.fillStyle = \"#e1e1e1\";\n        this.context.fill();\n    }\n\n    bindKeys() {\n        document.addEventListener(\"keydown\", this.keyDownHandler.bind(this));\n        document.addEventListener(\"keyup\", this.keyUpHandler.bind(this));\n    }\n\n    //Key handlers\n    keyDownHandler(e) {\n        if (e.keyCode === 39 || e.keyCode === 68) {\n            this.playerMoveRight = true;\n        }\n        if (e.keyCode === 37 || e.keyCode === 65) {\n            this.playerMoveLeft = true;\n        }\n        if (e.keyCode === 38 || e.keyCode === 87) {\n            this.playerMoveUp = true;\n        }\n        if (e.keyCode === 40 || e.keyCode === 83) {\n            this.playerMoveDown = true;\n        }\n        if (e.keyCode === 32) {\n            this.game.level.eventIndex++;\n        }\n    }\n\n    keyUpHandler(e) {\n        if (e.keyCode === 39 || e.keyCode === 68) {\n            this.playerMoveRight = false;\n        }\n        if (e.keyCode === 37 || e.keyCode === 65) {\n            this.playerMoveLeft = false;\n        }\n        if (e.keyCode === 38 || e.keyCode === 87) {\n            this.playerMoveUp = false;\n        }\n        if (e.keyCode === 40 || e.keyCode === 83) {\n            this.playerMoveDown = false;\n        }\n    }\n\n    movePlayer() {\n        for (let i = 0; i < this.game.level.events.length; i++) {\n            console.log(this.game.level.events[i]);\n            if ((this.game.level.events[i].size[0] <= this.playerX && this.playerX < this.game.level.events[i].size[0] + this.game.level.events[i].size[2]) &&\n                this.game.level.events[i].size[1] <= this.playerY && this.playerY < this.game.level.events[i].size[1] + this.game.level.events[i].size[3]) {\n                    this.triggerEvent(this.game.level.events[i]);\n                }\n        }\n        if (this.canMove) {\n            if (this.playerMoveLeft && this.playerX > 0 && this.canMoveWest()) {\n                this.playerX -= this.playerSpeed;\n                }\n            else if (this.playerMoveRight && this.playerX < this.game.canvasWidth - 10 && this.canMoveEast()) {\n                this.playerX += this.playerSpeed;\n                }\n            else if  (this.playerMoveUp && this.playerY > 0 && this.canMoveNorth()) {\n                this.playerY -= this.playerSpeed;\n            }\n            else if (this.playerMoveDown && this.playerY < this.game.canvasHeight - 10 && this.canMoveSouth()) {\n                this.playerY += this.playerSpeed;\n            }\n        }   \n    }\n\n    moveCheck(groundColor) {\n        if (groundColor !== \"224,11,64\") return false;\n        return true;\n    }\n\n    checkBoundary(playerDirection, playerDestination) {\n        if ((playerDirection === \"right\" && playerDestination >= this.game.canvasWidth - 10) \n            || (playerDirection === \"down\" && playerDestination >= this.game.canvasHeight - 10)) {\n            return true;\n        }\n        else return false;\n    }\n\n    triggerEvent(event) {\n        console.log(this.game.level.eventIndex);\n        if (this.game.level.eventIndex >= event.text.length) {\n            console.log(\"in here\");\n            this.canMove = true;\n            this.game.textBox.innerHTML = \"They walked on.\";\n            return false;\n        }\n        this.canMove = false;\n        this.game.textBox.innerHTML = event.text[this.game.level.eventIndex];\n    }\n\n    canMoveEast() {\n        if (this.checkBoundary(\"right\", this.playerX + 10)) {\n            this.playerX = 0;\n            this.playerY = Math.ceil(this.playerY / 100) * 100;\n            this.game.level = new Level(this.context, 0, this.playerY, this.textBox, this.events);\n        }\n        let eastMove = this.context.getImageData(this.playerX + 10, this.playerY, 1, 1).data.slice(0, 3).join(\",\");\n        return this.moveCheck(eastMove);\n    }\n\n    canMoveWest() {\n        let westMove = this.context.getImageData(this.playerX - 1, this.playerY, 1, 1).data.slice(0, 3).join(\",\");        \n        return this.moveCheck(westMove);\n    }\n\n    canMoveSouth() {\n        if (this.checkBoundary(\"down\", this.playerY + 10)) {\n            this.playerY = 0;\n            this.playerX = Math.ceil(this.playerX / 100) * 100;\n            this.game.level = new Level(this.context, this.playerX, 0, this.textBox, this.events);\n        }\n        let southMove = this.context.getImageData(this.playerX, this.playerY + 10, 1, 1).data.slice(0, 3).join(\",\");        \n        return this.moveCheck(southMove);\n    }\n\n    canMoveNorth() {\n        let northMove = this.context.getImageData(this.playerX, this.playerY - 1, 1, 1).data.slice(0, 3).join(\",\");        \n        return this.moveCheck(northMove);\n    }\n\n\n// END OF CLASS\n}\n\nexport default Player;","import Player from './player';\nimport Level from './levels/level';\nimport Events from './events/eventList';\n\nclass Game {\n    constructor(context, textBox) {\n        this.context = context;\n        this.textBox = textBox;\n        this.canvasHeight = 500;\n        this.canvasWidth = 900;\n        this.player = new Player(this, \"Nigel\", this.events);\n        this.level = new Level(this.context, 0, 0, this.textBox);\n        this.noScroll = this.noScroll.bind(this);\n        this.draw = this.draw.bind(this);\n    }\n\n    //THANKS DAVID WELLS (NOT THE FAMOUS YANKEE PRESUMABLY)\n    noScroll() {\n        window.scrollTo(0, 0);\n    }\n\n    draw() {\n        this.context.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.context.fillStyle = 'blue';\n        this.context.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.level.drawLevel2();\n        this.player.movePlayer();\n        this.player.drawPlayer();\n        requestAnimationFrame(this.draw);\n    }\n\n    play() {\n        window.addEventListener(\"scroll\", this.noScroll);\n        this.player.bindKeys();\n        this.draw();\n    }\n\n// END OF CLASS\n}\n\nexport default Game;","import Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const gameCanvas = document.getElementById(\"game\");\n    const textBox = document.getElementById(\"text\");\n    const context = gameCanvas.getContext(\"2d\");\n    const currentGame = new Game(context, textBox);\n    gameCanvas.height = currentGame.canvasHeight;\n    gameCanvas.width = currentGame.canvasWidth;    \n    currentGame.play();\n});\n\n"],"sourceRoot":""}