{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util.js","webpack:///./src/events/eventList.js","webpack:///./src/levels/shapes.js","webpack:///./src/levels/level.js","webpack:///./src/player.js","webpack:///./src/game.js","webpack:///./src/theStairs.js","webpack:///./node_modules/fabric/dist/fabric.js","webpack:///(webpack)/node_modules/buffer/index.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/node_modules/base64-js/index.js","webpack:///(webpack)/node_modules/ieee754/index.js","webpack:///(webpack)/node_modules/isarray/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","util","randomNumber","min","max","Math","floor","random","hue","trim","str","replace","[object Object]","rgba","parts","substring","indexOf","split","parseInt","this","g","b","toString","stuff","newStuff","slice","length","j","array1","array2","eventList","text","size","played","shapes","fabric","level","canvas","context","startX","startY","textBox","events","xBound","yBound","pathSize","pathX","pathY","shuffle","pathStart","drawLevel2","addimage","path","pathGenerator2","event","seedEvent","eventIndex","smallpath","Image","fromURL","bigPath","tallPath","widePath","compareArrays","renderAll","requestAnimFrame","left","top","set","add","currentShapes","currentShape","validShape","push","console","log","currentShapeIndex","workingShapes","splice","unshift","player","game","playerSize","playerX","playerY","playerSpeed","canMove","playerMoveRight","playerMoveLeft","playerMoveUp","playerMoveDown","beginPath","rect","fillStyle","fill","document","addEventListener","keyDownHandler","keyUpHandler","e","keyCode","triggerEvent","canMoveWest","canvasWidth","canMoveEast","canMoveNorth","canvasHeight","canMoveSouth","groundColor","playerDirection","playerDestination","innerHTML","checkBoundary","ceil","eastMove","getImageData","data","join","moveCheck","westMove","southMove","northMove","noScroll","draw","window","scrollTo","clearRect","fillRect","movePlayer","drawPlayer","requestAnimationFrame","bindKeys","theStairs_fabric","Canvas","getElementById","getContext","currentGame","setHeight","setWidth","play","Buffer","version","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","targetCanvas","ctx","translate","height","scale","sourceY","drawImage","width","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","Uint8Array","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","jsdom","decodeURIComponent","features","FetchExternalResources","jsdomImplForWrapper","implForWrapper","nodeCanvas","defaultView","DOMParser","isTouchSupported","navigator","maxTouchPoints","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","initFilterBackend","isWebglSupported","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","array","observe","arguments","prop","on","stopObserving","fire","options","listenersForEvent","len","filter","Observable","off","trigger","Collection","_objects","apply","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","index","nonSplicing","objects","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","getObjects","type","concat","item","isEmpty","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","_initGradient","filler","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","obj","_set","toggle","global","sqrt","atan2","pow","abs","PiBy180","PI","PiBy2","cos","angle","sin","sign","removeFromArray","idx","getRandomInt","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","transformPoint","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","yPoints","minY","invertTransform","a","toFixed","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","resolveNamespace","getSvgAttributes","attributes","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","src","loadImageInDom","div","createElement","style","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","forEach","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","centerPoint","Group","sourcePath","populateWithProperties","destination","properties","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","save","moveTo","rotate","restore","createCanvasElement","copyCanvasElement","newCanvas","clipContext","receiver","clip","multiplyTransformMatrices","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","target","flipX","flipY","saveObjectTransform","fn","String","match","isTransparent","tolerance","_isTransparent","imageData","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","aspectRatioAttrs","pop","alignX","alignY","clearFabricFontCache","fontFamily","toLowerCase","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","_join","Array","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","result","mDelta","mT","th3","segmentToBezier","th2","costh2","sinth2","costh3","sinth3","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","drawArc","fx","fy","coords","segs","segsNorm","bezierCurveTo","getBoundsOfArc","tx","ty","bound","find","byProperty","condition","k","invoke","method","args","value1","value2","extend","deep","Element","clone","getWholeChar","code","charCodeAt","isNaN","next","prev","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","_this","superClassMethod","createClass","initialize","shift","subclasses","unknown","areHostMethods","methodNames","test","getElement","setElement","getUniqueId","uid","element","__uniqueID","createListener","wrappedHandler","createWrappedHandler","addListener","removeListener","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","listeners","handlers","removeEventListener","listener","attachEvent","detachEvent","existingHandler","handlersForEvent","createDispatcher","pointerX","clientX","pointerY","clientY","_getPointer","pageProp","clientProp","pointer","eventTouchProp","getPointer","srcElement","scroll","getScrollLeftTop","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","zoom","setStyle","styles","elementStyle","cssText","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","toArray","arrayLike","childNodes","err","makeElement","tagName","el","className","htmlFor","setAttribute","docElement","body","scrollLeft","scrollTop","host","nodeType","arr","getComputedStyle","attr","undefined","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","getById","id","addClass","wrapElement","wrapper","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","_canvas","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","emptyFn","request","onComplete","xhr","XMLHttpRequest","parameters","param","addParamToUrl","open","setRequestHeader","send","warn","noop","_requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","animate","timestamp","time","start","Date","duration","finish","onChange","abort","easing","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","end","pos","color","calculateColor","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","letter-spacing","paint-order","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","clip-path","clip-rule","colorAttributes","stroke","normalizeAttr","normalizeValue","parentAttributes","parsed","isArray","map","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","RegExp","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","matcher","classNames","getAttribute","elementById","node","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","clipPaths","skewMatrix","matrix","commaWsp","reTransformList","reTransform","attributeValue","matrices","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","viewboxTransform","firstChild","recursivelyParseGradientsXlink","gradient","referencedGradient","substr","hasAttribute","children","referenceClone","cloneNode","removeAttribute","parseSVGDocument","parsingOptions","attrs","xlink","el2","currentTrans","oldLength","el3","nodeValue","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","parseAttributes","ownAttributes","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","parse","chunk","pair","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","ActiveXObject","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","parser","parseFromString","regexUrl","proto","numElements","createObjects","createObject","findTag","fromElement","createCallback","checkIfDone","resolveGradient","_removeTransformMatrix","resolveClipPath","extractPropertyDefinition","storage","lastIndex","gradientDef","createClipPathCallback","container","_newObj","fillRule","clipRule","objTransformInv","gTransform","clipPath","calcTransformMatrix","setPositionByOrigin","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","h","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","sort","pathOffset","reverse","minRadius","percentageShift","colorStop","toLive","createLinearGradient","createRadialGradient","instance","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","NUM_FRACTION_DIGITS","toDataURL","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","Error","renderAndResetBound","renderAndReset","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","canvasEl","_applyCanvasStyle","getWidth","getHeight","setDimensions","dimensions","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","clearContext","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","globalCompositeOperation","zoomX","zoomY","_cacheCanvas","cacheTranslationX","cacheTranslationY","render","_renderBackgroundOrOverlay","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","clipPathId","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","row","rowIndex","charIndex","fontList","_setSVGObject","finalWidth","finalHeight","sendToBack","objs","activeSelection","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","needsFullRender","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","original","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","normalizedPointer","targetRelativeX","targetRelativeY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","evented","selectable","centerTransform","action","altKey","_getOriginFromCorner","corner","_getActionFromCorner","alreadySelected","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","globalPointer","isEditing","subTarget","objToCheck","pointerToUse","subTargetCheck","ignoreZoom","_absolutePointer","_pointer","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","opt","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","clearContextTop","_setCursorFromEvent","cursorOffset","mr","mb","ml","addEventOptions","passive","checkClick","which","button","cursorMap","_bindEvents","addOrRemove","functor","eventjsFunctor","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","eventsBound","_simpleEventHandler","self","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","__onOrientationChange","__onShake","__onLongPress","preventDefault","_fireEnterLeaveEvents","stopPropagation","_cacheTransformEventData","_handleEvent","_resetTransformEventData","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","shouldRender","isClick","_target","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","_maybeGroupObjects","isMoving","__corner","eventType","subTargets","absolutePointer","_scaling","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","_previousPointer","shouldGroup","_shouldGroup","_handleGrouping","saveState","touches","_transformObject","_fireOverOutEvents","fireSynteticInOutEvents","targetName","canvasEvtOut","evtOut","canvasEvtIn","evtIn","config","inOpt","outOpt","inFires","oldTarget","targetChanged","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","supportQuality","format","quality","multiplier","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","originalSkipOffScreen","needsResize","__toDataURL","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","strokeDashOffset","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","dirty","paintFirst","stateProperties","cacheProperties","inverted","absolutePositioned","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","sizeGrowing","setTransform","calcOwnMatrix","_removeDefaultValues","getObjectScaling","scaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","drawCacheOnCanvas","_removeCacheCanvas","drawObject","propertySet","isCacheDirty","needsItsOwnCache","ownCaching","willDrawShadow","drawClipPathOnCache","_setClippingProperties","_setStrokeStyles","_setFillStyles","_drawClipPath","skipCanvas","_removeShadow","decl","lineDashOffset","dashArray","alternative","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","dataUrl","utils","origParams","originalShadow","withoutTransform","withoutShadow","boundingRect","getBoundingRect","shadowOffset","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","enlivedProps","originXOffset","originYOffset","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","w","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","skipAbsolute","_setCornerCoords","transformMatrixKey","prefix","cache","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","bbox","dimX","dimY","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","deltaY","overline","underline","linethrough","getSvgCommons","getSvgTransform","full","additionalTransform","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","_toSVG","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","clipPathMarkup","noStyle","withShadow","styleInfo","shadowInfo","absoluteClipPath","addPaintOrder","saveProps","props","tmpObj","dashedPropertySet","keys","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","svgString","endX","endY","largeFlag","getRadiusX","getRadiusY","isValidRadius","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","calcDim","_calcDimensions","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","specificTransform","_getOffsetTransform","digits","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","_includeDefaultValues","objsToObject","originalDefaults","_obj","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","enlivedClipPath","toGroup","newGroup","childrenOverride","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","removeTexture","_originalElement","_initConfig","applyFilters","resizeFilter","applyResizeFilters","backend","filterBackend","evictCachesForKey","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","strokeSvg","imageMarkup","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","sW","sH","elementToDraw","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","resources","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","startTime","drawImageTime","testContext","now","copyGLTo2D","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","originalWidth","originalHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","applyFiltersDebug","ret","glError","getError","NO_ERROR","errorString","glErrorToString","glErrorCode","errorCode","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","uniqueId","gpuInfo","ext","getExtension","renderer","vendor","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","temp","main","mainParameter","_class","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","distance","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","sX","sY","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","some","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","originalFill","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","char","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPostion","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLenght","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","currentActive","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","multipleSpacesRegex","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","internalMarkup","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","Textbox","minWidth","dynamicMinWidth","__cachedLines","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","getMinWidth","setObjectScaleOverridden","tw","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","isEncoding","actual","write","fromString","isBuffer","checked","val","isnan","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","out","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","eval","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","tripletToBase64","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2"],"mappings":"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","file":"./dist/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const Util = {\n    \n    randomNumber(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    },\n\n    hue() {\n        //Now calls the randomColor script, used to used this function:\n        return 'rgb(' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ')';\n        // var color = randomColor();\n        // return color;\n    },\n\n    trim(str) {\n    return str.replace(/^\\s+|\\s+$/gm, '');\n    },\n\n    rgbaToHex(rgba) {\n    var parts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\n        r = parseInt(this.trim(parts[0].substring(1)), 10),\n        g = parseInt(this.trim(parts[1]), 10),\n        b = parseInt(this.trim(parts[2]), 10);\n\n    return ('#' + r.toString(16) + g.toString(16) + b.toString(16));\n    },\n\n    //shuffles moves w/ Fisher-Yates shuffle algo\n    shuffle(stuff) {\n        let newStuff = stuff.slice();\n        for (let i = stuff.length - 1; i >= 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [newStuff[i], newStuff[j]] = [newStuff[j], newStuff[i]];\n        }\n        return newStuff;\n    },\n\n    compareArrays(array1, array2) {\n        for (let i = 0; i < array1.length; i++) {\n            if (array1[i] !== array2[i]) return false;\n        }\n        return true;\n    }\n\n};\n\nexport default Util;","import Event from './event';\nimport Game from '../game.js';\n\n\n\n//event objects\nconst Welcome = {\n    name: \"Welcome\",\n    text: [`Well Nige, looks like we've nowhere to go but up.`,\n            `Yeah, it's getting pretty damn warm down here. Let's rock`\n          ],\n    size: [100,100],\n    played: false\n};\n\nconst Ending = {\n    name: \"Ending\",\n    text: [`Well Nige, looks like we've nowhere else to go.`,\n        `WHAT THE FUCK?!`,\n        `What the single fuck indeed.`,\n        `*They reamin silent for a moment, starting over the edge*`,\n        `So what do we do now? You got any food left?`,\n        `Nah. You?`,\n        `Nah`\n    ],\n    size: [200, 200],\n    played: false\n};\n\nconst Food = {\n    name: \"Food\",\n    text: [`How much food ya got left?`,\n        `Lemme check. *Takes off his backpack, rummages around inside* Two power bars, one bag of Oberto,\n        and most of a liter of water. You?`,\n        `A bag of halloween candy, a bag of tortilla chips, and like half a two liter of coke.`,\n        `Perfect fuel for walking up stairs huh?`,\n        `Talking about it's not gonna make it any fucking better. Let's walk.`\n    ],\n    size: [100, 200],\n    played: false\n};\n\nconst Dance = {\n    name: \"Dance\",\n    text: [`Well Nige, looks like we've nowhere to go but up.`,\n        `Yeah, it's getting pretty damn warm down here. Let's rock`\n    ],\n    size: [200, 100],\n    played: false\n};\n\n//array of all events\nconst Events = [\n    Welcome, \n    Ending,\n    Dance,\n    Food\n];\n\nexport default Events;","const Shapes = [\n    [0 ,0, 100, 100],\n    [0, 0, 200, 200],\n    [0, 0, 100, 200],\n    [0, 0, 200, 100]\n];\n\nexport default Shapes;","import Util from '../util';\nimport Events from '../events/eventList';\nimport Shapes from './shapes';\nconst fabric = require('fabric').fabric;\n\nclass Level {\n    constructor(canvas, context, startX = 0, startY = 0, textBox, events = Events) {\n        this.context = context;\n        this.canvas = canvas;\n        this.textBox = textBox;\n        this.xBound = 900;\n        this.yBound = 600;\n        this.pathSize = 100;\n        this.pathX = this.pathSize;\n        this.pathY = this.pathSize;\n        this.shuffle = Util.shuffle.bind(this);\n        this.pathStart = [startX, startY, 100, 100];\n        this.drawLevel2 = this.drawLevel2.bind(this);\n        this.addimage = this.addimage.bind(this);\n        this.path = this.pathGenerator2();\n        this.event = this.seedEvent(events);\n        this.eventIndex = 0;\n        this.smallpath = fabric.Image.fromURL('assets/path_sprite.png');\n        // this.smallPath = new Image(100,100);\n        // this.smallPath.src = '../assets/path_sprite.png';\n        this.bigPath = fabric.Image.fromURL('assets/path_sprite_big_square.png');\n        // this.bigPath.src = '../assets/path_sprite_big_square.png';\n        this.tallPath = fabric.Image.fromURL('assets/path_sprite_long.png');\n        // this.tallPath.src = '../assets/path_sprite_long.png';\n        this.widePath = fabric.Image.fromURL('assets/path_sprite_wide.png');\n        // this.widePath.src = '../assets/path_sprite_wide.png';\n    }\n\n    // PATH ALGOS USING PREMADE SHAPES AND EVENTS\n    drawLevel2() {\n        const path = this.path;\n        var canvas = this.canvas;\n        for (let i = 0; i < path.length; i++) {\n            // this.context.rect(this.path[i][0], this.path[i][1], this.path[i][2], this.path[i][3]);\n            // this.context.fillStyle = \"rgb(224, 11, 64)\";\n            // this.context.fillStyle = this.path[i][4];\n            // this.context.fill();\n            // this.context.closePath();\n            if (Util.compareArrays(path[i].slice(2), Shapes[0].slice(2))) {\n                fabric.Image.fromURL('assets/path_sprite.png', this.addimage(canvas, path[i][0], path[i][1]));\n                // this.context.drawImage(this.smallPath, this.path[i][0], this.path[i][1], this.path[i][2], this.path[i][3]);            \n            } else if (Util.compareArrays(path[i].slice(2), Shapes[1].slice(2))) {\n                fabric.Image.fromURL('assets/path_sprite_big_square.png', this.addimage(canvas, path[i][0], path[i][1]));\n            } else if (Util.compareArrays(path[i].slice(2), Shapes[2].slice(2))) {\n                fabric.Image.fromURL('assets/path_sprite_wide.png', this.addimage(canvas, path[i][0], path[i][1]));\n            } else if (Util.compareArrays(path[i].slice(2), Shapes[3].slice(2))) {\n                fabric.Image.fromURL('assets/path_sprite_long.png', this.addimage(canvas, path[i][0], path[i][1]));\n            } \n        }\n        canvas.renderAll();\n        fabric.util.requestAnimFrame(this.drawLevel2);\n    }\n\n    addimage(canvas, left, top) {\n        return function(path) {\n            path.set({\n                left: left,\n                top: top\n            });\n            canvas.add(path);\n        };\n    }\n\n    pathGenerator2() {\n        let path = [this.pathStart];\n        while (path[path.length - 1][0] + 100 < this.xBound && path[path.length - 1][1] + 100 < this.yBound) {\n            let currentShapes = this.shuffle(Shapes);\n            let currentShape = this.validShape(path, currentShapes);\n            // currentShape.push(Util.hue());\n            path = path.slice();\n            path.push(currentShape);\n        }\n        console.log(path);\n        return path;\n    }\n\n    validShape(path, currentShapes) {\n        let currentShapeIndex = 0;\n        let workingShapes = currentShapes.slice();\n        let currentShape;\n        let i = 0;\n        while (workingShapes[i]) {\n            if ((path[path.length - 1][0] + workingShapes[i][0]) < 0 || (path[path.length - 1][1] + workingShapes[i][1]) < 0) {\n                workingShapes.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n        if (Util.randomNumber(0,2) === 1) {\n            currentShape = [path[path.length - 1][0], path[path.length - 1][1] + path[path.length - 1][3], workingShapes[0][2], workingShapes[0][3]];\n        } else {\n            currentShape = [path[path.length - 1][0] + path[path.length - 1][2], path[path.length - 1][1], workingShapes[0][2], workingShapes[0][3]];\n\n        }\n        for (let j = 0; j < path.length; j++) {\n            if (path[j][0] === currentShape[0] && path[j][1] === currentShape[1]) {\n                currentShapeIndex += 1;\n                currentShape = [path[path.length - 1][0] + workingShapes[currentShapeIndex][0], path[path.length - 1][1] + workingShapes[currentShapeIndex][1]];\n            }\n            return currentShape;\n        }\n    }\n\n    seedEvent(events) {\n        if (events[0].played === false) {\n            events[0].size.unshift(0, 0);\n            return events[0];\n            }\n        for (let i = 0; i < this.path.length; i++) {\n            for (let j = 0; j < events.length; j++) {\n                if (this.path[i][2] === events[j].size[0] && this.path[i][3] === events[j].size[1] && events[j].played === false) {\n                    if (Util.randomNumber(0, 2) === 1) {\n                        events[j].size.unshift(this.path[i][0], this.path[i][1]);\n                        return events[j];\n                    }\n                }\n            }\n        } \n\n    }\n\n//END OF CLASS\n}\n    \nexport default Level;\n\n  /* ORIGINAL FREEFORM PATH GENERATION ALGOS\n\n    drawLevel() {\n        this.context.beginPath();\n        for (let i = 0; i < this.path.length; i++) {\n            this.context.rect(this.path[i][0], this.path[i][1], this.pathSize, this.pathSize);\n            this.context.fillStyle = \"rgb(224, 11, 64)\";\n            this.context.fill();\n        } \n    }\n\n    pathGenerator() {\n        let path = [this.pathStart];\n        let moves = [[0, this.pathSize], [this.pathSize, 0], [-this.pathSize, 0], [0, -this.pathSize]];\n        while (path[path.length - 1][0] + 100 < this.xBound && path[path.length - 1][1] + 100 < this.yBound) {\n            let shuffledMoves = this.shuffle(moves);\n            let currentMove = this.validMove(path, shuffledMoves);\n            path = path.slice();\n            path.push(currentMove);\n        }\n        console.log(path);\n        return path;\n    }\n\n    validMove(path, shuffledMoves) {\n        // remove out of bounds \n        let workingMoves = shuffledMoves.slice();\n        let currentMoveIndex = 0;\n        let i = 0;\n        while (workingMoves[i]) {\n            if ((path[path.length - 1][0] + workingMoves[i][0]) < 0 || (path[path.length - 1][1] + workingMoves[i][1]) < 0) {\n                workingMoves.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n        //check for path collision\n        let currentMove = [path[path.length - 1][0] + workingMoves[0][0], path[path.length - 1][1] + workingMoves[0][1]];\n        for (let j = 0; j < path.length; j++) {\n            if (path[j][0] === currentMove[0] && path[j][1] === currentMove[1]) {\n                currentMoveIndex += 1;\n                currentMove = [path[path.length - 1][0] + workingMoves[currentMoveIndex][0], path[path.length - 1][1] + workingMoves[currentMoveIndex][1]];\n            }\n            return currentMove;\n        }\n    }\n\n    */","import Level from './levels/level';\n\nclass Player {\n    constructor(game, name, events) {\n\n        //context\n        this.game = game;\n        this.context = game.context;\n\n        //Self\n        this.name = name;\n        this.events = events;\n        this.playerSize = 10;\n        this.playerX = 0;\n        this.playerY = 0;\n        this.playerSpeed = 10;\n\n        //events\n        this.canMove = true;\n\n        //Keys\n        this.playerMoveRight = false;\n        this.playerMoveLeft = false;\n        this.playerMoveUp = false;\n        this.playerMoveDown = false;\n    }\n\n    drawPlayer() {\n        this.context.beginPath();\n        this.context.rect(this.playerX, this.playerY, this.playerSize, this.playerSize);\n        this.context.fillStyle = \"#e1e1e1\";\n        this.context.fill();\n    }\n\n    bindKeys() {\n        document.addEventListener(\"keydown\", this.keyDownHandler.bind(this));\n        document.addEventListener(\"keyup\", this.keyUpHandler.bind(this));\n    }\n\n    //Key handlers\n    keyDownHandler(e) {\n        if (e.keyCode === 39 || e.keyCode === 68) {\n            this.playerMoveRight = true;\n        }\n        if (e.keyCode === 37 || e.keyCode === 65) {\n            this.playerMoveLeft = true;\n        }\n        if (e.keyCode === 38 || e.keyCode === 87) {\n            this.playerMoveUp = true;\n        }\n        if (e.keyCode === 40 || e.keyCode === 83) {\n            this.playerMoveDown = true;\n        }\n        if (e.keyCode === 32) {\n            this.game.level.eventIndex++;\n        }\n    }\n\n    keyUpHandler(e) {\n        if (e.keyCode === 39 || e.keyCode === 68) {\n            this.playerMoveRight = false;\n        }\n        if (e.keyCode === 37 || e.keyCode === 65) {\n            this.playerMoveLeft = false;\n        }\n        if (e.keyCode === 38 || e.keyCode === 87) {\n            this.playerMoveUp = false;\n        }\n        if (e.keyCode === 40 || e.keyCode === 83) {\n            this.playerMoveDown = false;\n        }\n    }\n\n    movePlayer() {\n        if ( this.game.level.event && (this.game.level.event.size[0] <= this.playerX && this.playerX < this.game.level.event.size[0] + this.game.level.event.size[2]) &&\n            this.game.level.event.size[1] <= this.playerY && this.playerY < this.game.level.event.size[1] + this.game.level.event.size[3]) {\n                this.triggerEvent(this.game.level.event);\n            }\n        if (this.canMove) {\n            if (this.playerMoveLeft && this.playerX > 0 && this.canMoveWest()) {\n                this.playerX -= this.playerSpeed;\n                }\n            else if (this.playerMoveRight && this.playerX < this.game.canvasWidth - 10 && this.canMoveEast()) {\n                this.playerX += this.playerSpeed;\n                }\n            else if  (this.playerMoveUp && this.playerY > 0 && this.canMoveNorth()) {\n                this.playerY -= this.playerSpeed;\n            }\n            else if (this.playerMoveDown && this.playerY < this.game.canvasHeight - 10 && this.canMoveSouth()) {\n                this.playerY += this.playerSpeed;\n            }\n        }   \n    }\n\n    moveCheck(groundColor) {\n        if (groundColor === '66,134,244') return false;\n        return true;\n    }\n\n    checkBoundary(playerDirection, playerDestination) {\n        if ((playerDirection === \"right\" && playerDestination >= this.game.canvasWidth - 10) \n            || (playerDirection === \"down\" && playerDestination >= this.game.canvasHeight - 10)) {\n            return true;\n        }\n        else return false;\n    }\n\n    triggerEvent(event) {\n        if (this.game.level.eventIndex >= event.text.length) {\n            this.canMove = true;\n            event.played = true;\n            this.game.textBox.innerHTML = \"They walked on.\";\n            return false;\n        }\n        this.canMove = false;\n        this.game.textBox.innerHTML = event.text[this.game.level.eventIndex];\n    }\n\n    canMoveEast() {\n        if (this.checkBoundary(\"right\", this.playerX + 10)) {\n            this.playerX = 0;\n            this.playerY = Math.ceil(this.playerY / 100) * 100;\n            this.game.level = new Level(this.context, 0, this.playerY, this.textBox, this.events);\n        }\n        let eastMove = this.context.getImageData(this.playerX + 10, this.playerY, 1, 1).data.slice(0, 3).join(\",\");\n        return this.moveCheck(eastMove);\n    }\n\n    canMoveWest() {\n        let westMove = this.context.getImageData(this.playerX - 1, this.playerY, 1, 1).data.slice(0, 3).join(\",\");        \n        return this.moveCheck(westMove);\n    }\n\n    canMoveSouth() {\n        if (this.checkBoundary(\"down\", this.playerY + 10)) {\n            this.playerY = 0;\n            this.playerX = Math.ceil(this.playerX / 100) * 100;\n            this.game.level = new Level(this.context, this.playerX, 0, this.textBox, this.events);\n        }\n        let southMove = this.context.getImageData(this.playerX, this.playerY + 10, 1, 1).data.slice(0, 3).join(\",\");\n        return this.moveCheck(southMove);\n    }\n\n    canMoveNorth() {\n        let northMove = this.context.getImageData(this.playerX, this.playerY - 1, 1, 1).data.slice(0, 3).join(\",\");        \n        return this.moveCheck(northMove);\n    }\n\n\n// END OF CLASS\n}\n\nexport default Player;","import Player from './player';\nimport Level from './levels/level';\nimport Events from './events/eventList';\n\nclass Game {\n    constructor(canvas, context, textBox) {\n        this.canvas = canvas;\n        this.context = context;\n        this.textBox = textBox;\n        this.canvasHeight = 600;\n        this.canvasWidth = 900;\n        this.player = new Player(this, \"Nigel\", this.events);\n        this.level = new Level(this.canvas, this.context, 0, 0, this.textBox);\n        this.noScroll = this.noScroll.bind(this);\n        this.draw = this.draw.bind(this);\n    }\n\n    //THANKS DAVID WELLS (NOT THE FAMOUS YANKEE PRESUMABLY)\n    noScroll() {\n        window.scrollTo(0, 0);\n    }\n\n    draw() {\n        this.context.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.context.fillStyle = \"rgb(66,134,244)\";\n        this.context.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.level.drawLevel2();\n        this.player.movePlayer();\n        this.player.drawPlayer();\n        requestAnimationFrame(this.draw);\n    }\n\n    play() {\n        window.addEventListener(\"scroll\", this.noScroll);\n        this.player.bindKeys();\n        this.draw();\n    }\n\n// END OF CLASS\n}\n\nexport default Game;","import Game from './game';\nconst fabric = require('fabric').fabric;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // const gameCanvas = document.getElementById(\"game\");\n    const canvas = new fabric.Canvas(\"game\");\n    const textBox = document.getElementById(\"text\");\n    const context = canvas.getContext(\"2d\");\n    const currentGame = new Game(canvas, context, textBox);\n    // gameCanvas.height = currentGame.canvasHeight;\n    // gameCanvas.width = currentGame.canvasWidth;   \n    canvas.setHeight(currentGame.canvasHeight);\n    canvas.setWidth(currentGame.canvasWidth); \n    currentGame.play();\n});\n\n","/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '2.4.4' };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n  define([], function() { return fabric; });\n}\n/* _AMD_END_ */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require('jsdom')\n    .jsdom(\n      decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n      { features: {\n        FetchExternalResources: ['img']\n      }\n      });\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = fabric.document.defaultView;\n  DOMParser = require('xmldom').DOMParser;\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document ||\n  (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0);\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  'fill', 'fill-opacity', 'fill-rule',\n  'opacity',\n  'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset',\n  'stroke-linejoin', 'stroke-miterlimit',\n  'stroke-opacity', 'stroke-width',\n  'id', 'paint-order',\n  'instantiated_by_use', 'clip-path'\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.canvasModule = 'canvas';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\n/**\n * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.arcToSegmentsCache = { };\n\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.boundsOfCurveCache = { };\n\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\nfabric.cachesBoundsOfCurve = true;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this._objects;\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this._objects,\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this._objects.indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function(angle) {\n      if (angle === 0) { return 1; }\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n      var angleSlice = angle / PiBy2;\n      switch (angleSlice) {\n        case 1: case 3: return 0;\n        case 2: return -1;\n      }\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function(angle) {\n      if (angle === 0) { return 0; }\n      var angleSlice = angle / PiBy2, sign = 1;\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n      switch (angleSlice) {\n        case 1: return sign;\n        case 2: return 0;\n        case 3: return -sign;\n      }\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements && elements.length === 1) {\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function(canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function (target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (fabric.arcToSegmentsCache[argsString]) {\n      return fabric.arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    fabric.arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    return [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas property in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas') {\n            destination[property] = extend({ }, source[property]);\n          }\n          else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n        return event.clientX;\n      },\n\n      pointerY = function(event) {\n        return event.clientY;\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n    var pointer, eventTouchProp = event[touchProp];\n\n    if (eventTouchProp && eventTouchProp[0]) {\n      pointer = eventTouchProp[0][clientProp];\n    }\n\n    if (typeof pointer === 'undefined') {\n      pointer = event[clientProp];\n    }\n\n    return pointer;\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  };\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n    var impl = fabric.jsdomImplForWrapper(element);\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null;\n      // unsure if necessary\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'letter-spacing':     'charSpacing',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-dashoffset':  'strokeDashOffset',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity',\n        'clip-path':          'clipPath',\n        'clip-rule':          'clipRule',\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n  fabric.clipPaths = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n          return parseFloat(n);\n        });\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = fabric.iMatrix,\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, len;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\n          attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n        // calculate additional translation to move the viewbox\n      }\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\n        // calculate additional translation to move the viewbox\n      }\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX + widthDiff) + ' ' +\n                  (minY * scaleY + heightDiff) + ') ';\n    parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n    var clipPaths = { };\n    descendants.filter(function(el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function(el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function(el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths;\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).substr(1),\n        referencedGradient = elementById(doc, xLink);\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n    gradientsAttrs.forEach(function(attr) {\n      if (!gradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, gradientDefs = { };\n      j = elList.length;\n      while (j--) {\n        el = elList[j];\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                   ownAttributes['font-size'] || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n};\n\n(function(proto) {\n  proto.parse = function() {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function() {\n    var _this = this;\n    this.elements.forEach(function(element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function(el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function(el, index) {\n    var klass = this.findTag(el);\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      }\n      catch (err) {\n        fabric.log(err);\n      }\n    }\n    else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function(index, el) {\n    var _this = this;\n    return function(obj) {\n      var _options;\n      _this.resolveGradient(obj, 'fill');\n      _this.resolveGradient(obj, 'stroke');\n      if (obj instanceof fabric.Image) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n      obj._removeTransformMatrix(_options);\n      _this.resolveClipPath(obj);\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function(obj, property, storage) {\n    var value = obj[property];\n    if (!(/^url\\(/).test(value)) {\n      return;\n    }\n    var id = this.regexUrl.exec(value)[1];\n    this.regexUrl.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function(obj, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n    if (gradientDef) {\n      obj.set(property, fabric.Gradient.fromElement(gradientDef, obj));\n    }\n  };\n\n  proto.createClipPathCallback = function(obj, container) {\n    return function(_newObj) {\n      _newObj._removeTransformMatrix();\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function(obj) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element, klass, objTransformInv, container, gTransform, options;\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(\n          element,\n          this.createClipPathCallback(obj, container),\n          this.options\n        );\n      }\n      if (container.length === 1) {\n        clipPath = container[0];\n      }\n      else {\n        clipPath = new fabric.Group(container);\n      }\n      gTransform = fabric.util.multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix()\n      );\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({ x: options.translateX, y: options.translateY }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n  };\n\n  proto.checkIfDone = function() {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function(el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = clone(this.coords, true), i, len,\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          offsetX = object.width / 2, offsetY = object.height / 2;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n      for (var prop in coords) {\n        if (prop === 'x1' || prop === 'x2') {\n          coords[prop] += this.offsetX - offsetX;\n        }\n        else if (prop === 'y1' || prop === 'y2') {\n          coords[prop] += this.offsetY - offsetY;\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix, i;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20, color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument.\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     * @deprecated since 2.3.0\n     * Use before:transform event\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    cancelRequestedRender: function() {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform, path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render', { ctx: ctx, });\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      if (path) {\n        path.canvas = this;\n        // needed to setup a couple of variables\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({ forClipping: true });\n        this.drawClipPathOnCanvas(ctx);\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render', { ctx: ctx, });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function(ctx) {\n      var v = this.viewportTransform, path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'], v;\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          v = this.viewportTransform;\n          ctx.save();\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var clipPath = this.clipPath, data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude),\n      };\n      if (clipPath) {\n        clipPath = clipPath.toObject(propertiesToInclude);\n      }\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this._objects.filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n      this._setSVGObjects(markup, reviver);\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        this.createSVGClipPathMarkup(options),\n        '</defs>\\n'\n      );\n    },\n\n    createSVGClipPathMarkup: function(options) {\n      var clipPath = this.clipPath;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return  '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(options.reviver) +\n          '</clipPath>\\n';\n      }\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this._objects;\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property], vpt = this.viewportTransform, finalWidth = this.width / vpt[0],\n          finalHeight = this.height / vpt[3];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\n          ' x=\"', filler.offsetX - finalWidth / 2, '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : finalWidth ),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : finalHeight),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n          'fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.forEachObject(function(object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n      this.backgroundImage = null;\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray || []);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function (ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n          this._render();\n        }\n        else {\n          var points = this._points, length = points.length, ctx = this.canvas.contextTop;\n          // draw the curve update\n          this._saveAndTransform(ctx);\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this.oldEnd = undefined;\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n      this._points.push(point);\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n      this._setBrushStyles();\n      var color = new fabric.Color(this.color);\n      this.needsFullRender = (color.getAlpha() < 1);\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\n      path.top = position.y;\n      path.left = position.x;\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.renderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function() {\n    var ctx  = this.canvas.contextTop, i, len,\n        points = this.points, point;\n    this._saveAndTransform(ctx);\n    for (i = 0, len = points.length; i < len; i++) {\n      point = points[i];\n      ctx.fillStyle = point.fill;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n      ctx.closePath();\n      ctx.fill();\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function(sprayChunk) {\n    var ctx = this.canvas.contextTop, i, len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function() {\n    var ctx = this.canvas.contextTop, i, ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified\n   * @fires object:rotated\n   * @fires object:scaled\n   * @fires object:moved\n   * @fires object:skewed\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:skewing\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:transform\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before\n   * @fires mouse:move:before\n   * @fires mouse:up:before\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    renderTopLayer: function(ctx) {\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      }\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n        this.contextTopDirty = true;\n      }\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.originX !== 'center') {\n          if (t.originX === 'right') {\n            t.mouseXSign = -1;\n          }\n          else {\n            t.mouseXSign = 1;\n          }\n        }\n        if (t.originY !== 'center') {\n          if (t.originY === 'bottom') {\n            t.mouseYSign = -1;\n          }\n          else {\n            t.mouseYSign = 1;\n          }\n        }\n\n        t.originX = 'center';\n        t.originY = 'center';\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      if (target.shouldCache() && target._cacheCanvas) {\n        var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\n            targetRelativeX = target.cacheTranslationX + (normalizedPointer.x * target.zoomX),\n            targetRelativeY = target.cacheTranslationY + (normalizedPointer.y * target.zoomY);\n\n        var isTransparent = fabric.util.isTransparent(\n          target._cacheContext, targetRelativeX, targetRelativeY, this.targetFindTolerance);\n\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false,\n      });\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(alreadySelected, corner, e) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(alreadySelected, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        // used by transation\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        // unsure they are usefull anymore.\n        // left: target.left,\n        // top: target.top,\n        theta: degreesToRadians(target.angle),\n        // end of unsure\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey],\n        original: fabric.util.saveObjectTransform(target),\n      };\n\n      this._currentTransform.original.originX = origin.x;\n      this._currentTransform.original.originY = origin.y;\n\n      this._resetCurrentTransform();\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.lockScalingX,\n          lockScalingY = target.lockScalingY,\n          lockScalingFlip = target.lockScalingFlip;\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          changeX, changeY, scaleX, scaleY;\n\n      scaleX = localMouse.x * target.scaleX / _dim.x;\n      scaleY = localMouse.y * target.scaleY / _dim.y;\n      changeX = target.scaleX !== scaleX;\n      changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform,\n          target = t.target, constraintPosition,\n          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n      if (target.lockRotation) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\n          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (target.snapAngle > 0) {\n        var snapAngle  = target.snapAngle,\n            snapThreshold  = target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (target.angle === angle) {\n        hasRotated = false;\n      }\n      else {\n        // rotation only happen here\n        target.angle = angle;\n        // Make sure the constraints apply\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function(pointer, obj, globalPointer) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ?\n          this._normalizePointer(objToCheck.group, pointer) : pointer;\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [], opt = { e: e };\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed;\n        // added for backward compatibility\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      }\n      else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n        opt.selected = added;\n        // added for backward compatibility\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      }\n      else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: currentActives[0], e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this._activeObject.realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n\n    setViewportTransform: function (vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\n      addEventOptions = { passive: false };\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n      this.addOrRemove(addListener, 'add');\n    },\n\n    addOrRemove: function(functor, eventjsFunctor) {\n      functor(fabric.window, 'resize', this._onResize);\n      functor(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      functor(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      functor(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      functor(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      functor(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      functor(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n      functor(this.upperCanvasEl, 'dblclick', this._onDoubleClick);\n      functor(this.upperCanvasEl, 'touchstart', this._onMouseDown, addEventOptions);\n      functor(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n      functor(this.upperCanvasEl, 'dragover', this._onDragOver);\n      functor(this.upperCanvasEl, 'dragenter', this._onDragEnter);\n      functor(this.upperCanvasEl, 'dragleave', this._onDragLeave);\n      functor(this.upperCanvasEl, 'drop', this._onDrop);\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'shake', this._onShake);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      this.addOrRemove(removeListener, 'remove');\n      // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function(e) {\n      e.preventDefault();\n      var target = this._simpleEventHandler('dragover', e);\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'dblclick');\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      addListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function(target) {\n      var activeObject = this._activeObject;\n\n      if (\n        !!activeObject !== !!target ||\n        (activeObject && target && (activeObject !== target))\n      ) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      }\n      else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, transform = this._currentTransform,\n          groupSelector = this._groupSelector, shouldRender = false,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      this._cacheTransformEventData(e);\n      target = this._target;\n      this._handleEvent(e, 'up:before');\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n        this._resetTransformEventData();\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        shouldRender = transform.actionPerformed;\n      }\n\n      if (!isClick) {\n        this._maybeGroupObjects(e);\n        shouldRender || (shouldRender = this._shouldRender(target));\n      }\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n      this._groupSelector = null;\n      this._currentTransform = null;\n      // reset the target information about which corner is selected\n      target && (target.__corner = 0);\n      if (shouldRender) {\n        this.requestRenderAll();\n      }\n      else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function(eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n          };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n      if (!targets) {\n        return target;\n      }\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false,\n            pointer: this._pointer,\n            absolutePointer: this._absolutePointer,\n            transform: this._currentTransform\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target,\n          eventName,\n          options = {\n            e: e,\n            target: target,\n            transform: transform,\n          };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        if (transform.actionPerformed) {\n          eventName = this._addEventOptions(options, transform);\n          this._fire(eventName, options);\n        }\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * Mutate option object in order to add by property and give back the event name.\n     * @private\n     * @param {Object} options to mutate\n     * @param {Object} transform to inspect action from\n     */\n    _addEventOptions: function(options, transform) {\n      // we can probably add more details at low cost\n      // scale change, rotation changes, translation changes\n      var eventName, by;\n      switch (transform.action) {\n        case 'scaleX':\n          eventName = 'scaled';\n          by = 'x';\n          break;\n        case 'scaleY':\n          eventName = 'scaled';\n          by = 'y';\n          break;\n        case 'skewX':\n          eventName = 'skewed';\n          by = 'x';\n          break;\n        case 'skewY':\n          eventName = 'skewed';\n          by = 'y';\n          break;\n        case 'scale':\n          eventName = 'scaled';\n          by = 'equally';\n          break;\n        case 'rotate':\n          eventName = 'rotated';\n          break;\n        case 'drag':\n          eventName = 'moved';\n          break;\n      }\n      options.by = by;\n      return eventName;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'down:before');\n      var target = this._target;\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer;\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n        }\n      }\n      this._handleEvent(e, 'down');\n      // we must renderAll so that we update the visuals\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function() {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function(e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t,\n      });\n      // determine if it's a drag or rotate case\n      if (t.corner) {\n        this.onBeforeScaleRotate(t.target);\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n      this._handleEvent(e, 'move:before');\n      this._cacheTransformEventData(e);\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this._pointer;\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      this.fireSynteticInOutEvents(target, e, {\n        targetName: '_hoveredTarget',\n        canvasEvtOut: 'mouse:out',\n        evtOut: 'mouseout',\n        canvasEvtIn: 'mouse:over',\n        evtIn: 'mouseover',\n      });\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function(target, e) {\n      this.fireSynteticInOutEvents(target, e, {\n        targetName: '_draggedoverTarget',\n        evtOut: 'dragleave',\n        evtIn: 'dragenter',\n      });\n    },\n\n    /**\n     * Manage the syntetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSynteticInOutEvents: function(target, e, config) {\n      var inOpt, outOpt, oldTarget = this[config.targetName], outFires, inFires,\n          targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\n      if (targetChanged) {\n        inOpt = { e: e, target: target, previousTarget: oldTarget };\n        outOpt = { e: e, target: oldTarget, nextTarget: target };\n        this[config.targetName] = target;\n      }\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'wheel');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          options = {\n            target: transform.target,\n            e: e,\n            transform: transform,\n            pointer: pointer\n          };\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', options);\n          this.setCursor(options.target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, options) {\n      this.fire('object:' + eventName, options);\n      options.target.fire(eventName, options);\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      }\n      else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      }\n      else {\n        return this.defaultCursor;\n      }\n    },\n\n    actionIsDisabled: function(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      }\n      else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      }\n      else if (corner === 'mtr') {\n        return target.lockRotation;\n      }\n      else {\n        return this._isUniscalePossible(e, target) ?\n          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.angle % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({ e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      // avoid multi select when shift click on a corner\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(e),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function(e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible || currentObject.onSelect({ e: e })) {\n          continue;\n        }\n\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2))\n        ) {\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n    }\n  });\n\n})();\n\n\n(function () {\n\n  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? 1 : 1 / this.getRetinaScaling()),\n          cropping = {\n            left: options.left || 0,\n            top: options.top || 0,\n            width: options.width || 0,\n            height: options.height || 0,\n          };\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    },\n\n    /**\n     * @private\n     */\n    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n      var origWidth = this.width,\n          origHeight = this.height,\n          scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - cropping.left) * multiplier,\n          translateY = (vp[5] - cropping.top) * multiplier,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalInteractive = this.interactive,\n          originalSkipOffScreen = this.skipOffscreen,\n          needsResize = origWidth !== scaledWidth || origHeight !== scaledHeight;\n\n      this.viewportTransform = newVp;\n      this.skipOffscreen = false;\n      // setting interactive to false avoid exporting controls\n      this.interactive = false;\n      if (needsResize) {\n        this.setDimensions({ width: scaledWidth, height: scaledHeight }, { backstoreOnly: true });\n      }\n      // call a renderAll to force sync update. This will cancel the scheduled requestRenderAll\n      // from setDimensions\n      this.renderAll();\n      var data = this.__toDataURL(format, quality, cropping);\n      this.interactive = originalInteractive;\n      this.skipOffscreen = originalSkipOffScreen;\n      this.viewportTransform = vp;\n      //setDimensions with no option object is taking care of:\n      //this.width, this.height, this.requestRenderAll()\n      if (needsResize) {\n        this.setDimensions({ width: origWidth, height: origHeight }, { backstoreOnly: true });\n      }\n      this.renderAll();\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    __toDataURL: function(format, quality) {\n\n      var canvasEl = this.contextContainer.canvas;\n      var data = supportQuality\n        ? canvasEl.toDataURL('image/' + format, quality)\n        : canvasEl.toDataURL('image/' + format);\n\n      return data;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        enlivenedObjects.forEach(function(obj, index) {\n          // we splice the array just in case some custom classes restored from JSON\n          // will add more object to canvas at canvas init.\n          _this.insertAt(obj, index);\n        });\n        _this.renderOnAddRemove = renderOnAddRemove;\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        _this.renderAll();\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.util.createCanvasElement();\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument).\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst clipPath'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst' +\n      ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'\n    ).split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n      // if canvas gets created, is empty, so dirty.\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var objectScale = this.getTotalObjectScaling(),\n          dim = this._getNonTransformedDimensions(),\n          zoomX = objectScale.scaleX,\n          zoomY = objectScale.scaleY,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly crating problem\n        // in situation in wich the cache canvas gets an upper limit\n        width: width + ALIASING_LIMIT,\n        height: height + ALIASING_LIMIT,\n        zoomX: zoomX,\n        zoomY: zoomY,\n        x: dim.x,\n        y: dim.y\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      var targetCanvas = this.canvas;\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x * zoomX / 2;\n        drawingHeight = dims.y * zoomY / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var m;\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      }\n      else {\n        m = this.calcOwnMatrix();\n      }\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeDashOffset:         this.strokeDashOffset,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS),\n          };\n\n      if (this.clipPath) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function() {\n      var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 ||\n        (this.width === 0 && this.height === 0 && this.strokeWidth === 0) ||\n        !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    renderCache: function(options) {\n      options = options || {};\n      if (!this._cacheCanvas) {\n        this._createCacheCanvas();\n      }\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns false\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' && typeof this.shadow === 'object') {\n        return true;\n      }\n      if (this.clipPath) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching &&\n      (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCache: function(ctx) {\n      var path = this.clipPath;\n      ctx.save();\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n      if (path.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      }\n      else {\n        ctx.globalCompositeOperation = 'destination-in';\n      }\n      //ctx.scale(1 / 2, 1 / 2);\n      if (path.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx, forClipping) {\n\n      if (forClipping) {\n        this._setClippingProperties(ctx);\n      }\n      else {\n        this._renderBackground(ctx);\n        this._setStrokeStyles(ctx, this);\n        this._setFillStyles(ctx, this);\n      }\n      this._render(ctx);\n      this._drawClipPath(ctx);\n    },\n\n    _drawClipPath: function(ctx) {\n      var path = this.clipPath;\n      if (!path) { return; }\n      // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n      path.canvas = this.canvas;\n      path.shouldCache();\n      path._transformDone = true;\n      path.renderCache({ forClipping: true });\n      this.drawClipPathOnCache(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty ||\n          (this.clipPath && this.clipPath.absolutePositioned) ||\n          (this.statefullCache && this.hasStateChanged('cacheProperties'))\n        ) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive\n          ? decl.stroke.toLive(ctx, this)\n          : decl.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive\n          ? decl.fill.toLive(ctx, this)\n          : decl.fill;\n      }\n    },\n\n    _setClippingProperties: function(ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (this.canvas && this.canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var dataUrl = this.toDataURL(options);\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var utils = fabric.util, origParams = utils.saveObjectTransform(this),\n          originalShadow = this.shadow, abs = Math.abs;\n\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n          boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow, scaling,\n          shadowOffset = { x: 0, y: 0 }, shadowBlur;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n        scaling = this.getObjectScaling();\n        shadowOffset.x = 2 * Math.round((abs(shadow.offsetX) + shadowBlur) * abs(scaling.scaleX));\n        shadowOffset.y = 2 * Math.round((abs(shadow.offsetY) + shadowBlur) * abs(scaling.scaleY));\n      }\n      el.width = boundingRect.width + shadowOffset.x;\n      el.height = boundingRect.height + shadowOffset.y;\n      el.width += el.width % 2 ? 2 - el.width % 2 : 0;\n      el.height += el.height % 2 ? 2 - el.height % 2 : 0;\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: options.enableRetinaScaling,\n        renderOnAddRemove: false,\n        skipOffscreen: false,\n      });\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n      this.shadow = originalShadow;\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n      // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transformMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @param {Function} [callback] Callback to invoke when image set as a pattern\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * object.setPatternFill({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat'\n     * },canvas.renderAll.bind(canvas));\n     */\n    setPatternFill: function(options, callback) {\n      return this.set('fill', new fabric.Pattern(options, callback));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n        object.clipPath = enlivedProps[0];\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices,\n      transformPoint = fabric.util.transformPoint;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are usefull to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n          ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the objects containe the point\n     */\n    _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          vpt = this.getViewportTransform(),\n          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2, h = dim.y / 2,\n          tl = transformPoint({ x: -w, y: -h }, finalMatrix),\n          tr = transformPoint({ x: w, y: -h }, finalMatrix),\n          bl = transformPoint({ x: -w, y: h }, finalMatrix),\n          br = transformPoint({ x: w, y: h }, finalMatrix);\n      if (!absolute) {\n        var padding = this.padding, angle = degreesToRadians(this.angle),\n            cos = fabric.util.cos(angle), sin = fabric.util.sin(angle),\n            cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\n            cosPMinusSinP = cosP - sinP;\n        if (padding) {\n          tl.x -= cosPMinusSinP;\n          tl.y -= cosPSinP;\n          tr.x += cosPSinP;\n          tr.y -= cosPMinusSinP;\n          bl.x -= cosPSinP;\n          bl.y += cosPMinusSinP;\n          br.x += cosPMinusSinP;\n          br.y += cosPSinP;\n        }\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n      }\n\n      // if (!absolute) {\n      //   var canvas = this.canvas;\n      //   setTimeout(function() {\n      //     canvas.contextTop.clearRect(0, 0, 700, 700);\n      //     canvas.contextTop.fillStyle = 'green';\n      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n      //   }, 50);\n      // }\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height.\n     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = fabric.util.cos(theta), sin = fabric.util.sin(theta);\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function() {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this.calcOwnMatrix();\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this._calcTranslateMatrix(),\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions();\n      if (skewX === 0 && skewY === 0) {\n        return { x: dimensions.x * this.scaleX, y: dimensions.y * this.scaleY };\n      }\n      var dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * Calculate object dimensions for controls. include padding and canvas zoom\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-dashoffset: ', strokeDashOffset, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ?\n        'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\n          '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        deltaY,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function(style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') +\n          (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function() {\n      return [\n        this.id ? 'id=\"' + this.id + '\" ' : '',\n        this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : '',\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function(full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = transform.map(function(value) {\n            return toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n          }).join(' ');\n      return 'transform=\"matrix(' + svgTransform + ')' +\n        (additionalTransform || '') + this.getSvgTransformMatrix() + '\" ';\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ')' : '';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(), { reviver: reviver });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [\n            this.getSvgTransform(true, additionalTransform),\n            this.getSvgCommons(),\n          ].join(''),\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle, withShadow = options.withShadow,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          absoluteClipPath = this.clipPath && this.clipPath.absolutePositioned,\n          commonPieces, markup = [], clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS');\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(reviver) +\n          '</clipPath>\\n';\n      }\n      if (absoluteClipPath) {\n        markup.push(\n          '<g ', shadowInfo, this.getSvgCommons(), ' >\\n'\n        );\n      }\n      markup.push(\n        '<g ',\n        this.getSvgTransform(false),\n        !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n        ' >\\n'\n      );\n      commonPieces = [\n        styleInfo,\n        noStyle ? '' : this.addPaintOrder(), ' '\n      ].join('');\n      objectMarkup[index] = commonPieces;\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!currentValue ||\n          typeof currentValue !== 'object' ||\n          (!firstPass && keys.length !== Object.keys(currentValue).length)\n      ) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n        if (key === 'canvas') {\n          continue;\n        }\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\n            styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n            styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top, styleOverride);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top, styleOverride);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height, styleOverride);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top, styleOverride);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height, styleOverride);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2, styleOverride);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2, styleOverride);\n      }\n\n      // middle-top-rotate\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var p = this.calcLinePoints();\n      return [\n        '<line ', 'COMMON_PARTS',\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString, x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        svgString = [\n          '<circle ', 'COMMON_PARTS',\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" />\\n'\n        ];\n      }\n      else {\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\n            startY = fabric.util.sin(this.startAngle) * this.radius,\n            endX = fabric.util.cos(this.endAngle) * this.radius,\n            endY = fabric.util.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n        svgString = [\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\"', 'COMMON_PARTS', ' />\\n'\n        ];\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        this.startAngle,\n        this.endAngle, false);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ].join(',');\n      return [\n        '<polygon ', 'COMMON_PARTS',\n        'points=\"', points,\n        '\" />'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      return [\n        '<ellipse ', 'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback) {\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var x = -this.width / 2, y = -this.height / 2;\n      return [\n        '<rect ', 'COMMON_PARTS',\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.rx, '\" ry=\"', this.ry,\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      var calcDim = this._calcDimensions();\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      return [\n        '<' + this.type + ' ', 'COMMON_PARTS',\n        'points=\"', points.join(''),\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polygon(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      toFixed = fabric.util.toFixed,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n        top: this.top,\n        left: this.left,\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var specificTransform = this._getOffsetTransform(),\n          path = this.path.map(function(path) {\n            return path.join(' ');\n          }).join(' ');\n      return [\n        '<path ', 'COMMON_PARTS',\n        'd=\"', path,\n        '\" stroke-linecap=\"round\" ',\n        'transform=\"' + specificTransform + '\" ',\n        '/>\\n'\n      ];\n    },\n\n    _getOffsetTransform: function() {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' +\n          toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return '\\t' + this._createBaseClipPathSVGMarkup(\n        this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform }\n      );\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        }\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n      var objsToObject = this._objects.map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      this.ownCaching = ownCache;\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return fabric.Object.prototype.willDrawShadow.call(this);\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n      this._drawClipPath(ctx);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0, left = minXY.x || 0,\n          width = (maxXY.x - minXY.x) || 0,\n          height = (maxXY.y - minXY.y) || 0;\n      this.width = width;\n      this.height = height;\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      return this._createBaseSVGMarkup(\n        svgString,\n        { reviver: reviver, noStyle: true, withShadow: true });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, { reviver: reviver });\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedClipPath) {\n        var options = fabric.util.object.clone(object, true);\n        options.clipPath = enlivedClipPath[0];\n        delete options.objects;\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects.concat();\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function(object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal fiters\n      // and is triggered by user interactions rather than dev code\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function(key) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function() {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\n     * @return {Boolean}\n     */\n    hasCrop: function() {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString = [], imageMarkup = [], strokeSvg,\n          x = -this.width / 2, y = -this.height / 2, clipPath = '';\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push(\n          '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n          '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\n          '</clipPath>\\n'\n        );\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', this._element.width || this._element.naturalWidth,\n        '\" height=\"', this._element.height || this._element.height,\n        '\"', clipPath,\n        '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = [\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        ];\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      }\n      else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n        return element.src;\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        this.setElement(img, options);\n        this._setWidthHeight();\n        callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (this.group) {\n        this.set('dirty', true);\n      }\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\n      this.set('dirty', true);\n\n      // needs to clear out or WEBGL will not resize correctly\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n        // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching && this.needsItsOwnCache();\n      return this.ownCaching;\n    },\n\n    _renderFill: function(ctx) {\n      var w = this.width, h = this.height, sW = w * this._filterScalingX, sH = h * this._filterScalingY,\n          x = -w / 2, y = -h / 2, elementToDraw = this._element;\n      elementToDraw && ctx.drawImage(elementToDraw,\n        this.cropX * this._filterScalingX,\n        this.cropY * this._filterScalingY,\n        sW,\n        sH,\n        x, y, w, h);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      var scale = this.getTotalObjectScaling();\n      return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n            object.clipPath = enlivedProps[0];\n            var image = new fabric.Image(img, object);\n            callback(image);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined';\n      var canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n            alpha: true,\n            premultipliedAlpha: false,\n            depth: false,\n            stencil: false,\n            antialias: false\n          },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * The same as the applyFilter method but with additional logging of WebGL\n     * errors.\n     */\n    applyFiltersDebug: function(filters, source, width, height, targetCanvas, cacheKey) {\n      // The following code is useful when debugging a specific issue but adds ~10x slowdown.\n      var gl = this.gl;\n      var ret = this.applyFilters(filters, source, width, height, targetCanvas, cacheKey);\n      var glError = gl.getError();\n      if (glError !== gl.NO_ERROR) {\n        var errorString = this.glErrorToString(gl, glError);\n        var error = new Error('WebGL Error ' + errorString);\n        error.glErrorCode = glError;\n        throw error;\n      }\n      return ret;\n    },\n\n    glErrorToString: function(context, errorCode) {\n      if (!context) {\n        return 'Context undefined for error code: ' + errorCode;\n      }\n      else if (typeof errorCode !== 'number') {\n        return 'Error code is not a number';\n      }\n      switch (errorCode) {\n        case context.NO_ERROR:\n          return 'NO_ERROR';\n        case context.INVALID_ENUM:\n          return 'INVALID_ENUM';\n        case context.INVALID_VALUE:\n          return 'INVALID_VALUE';\n        case context.INVALID_OPERATION:\n          return 'INVALID_OPERATION';\n        case context.INVALID_FRAMEBUFFER_OPERATION:\n          return 'INVALID_FRAMEBUFFER_OPERATION';\n        case context.OUT_OF_MEMORY:\n          return 'OUT_OF_MEMORY';\n        case context.CONTEXT_LOST_WEBGL:\n          return 'CONTEXT_LOST_WEBGL';\n        default:\n          return 'UNKNOWN_ERROR';\n      }\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl;\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      var gpuInfo = { renderer: '', vendor: '' };\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image = fabric.Image || { };\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      else {\n        return _class[main] === this[main];\n      }\n    }\n    else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function() {\n      return false;\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function() {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' +\n          'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n        '}\\n' +\n        'if (uColor.g < 0.5) {\\n' +\n          'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n        '}\\n' +\n        'if (uColor.b < 0.5) {\\n' +\n          'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n        '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n        'gl_FragColor.rgb += uColor.rgb;\\n',\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function(mode) {\n      return 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor = color;\\n' +\n          'if (color.a > 0.0) {\\n' +\n            this.fragmentSource[mode] +\n          '}\\n' +\n        '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode, shaderSource;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aPosition;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      else {\n        context.clearRect(0, 0, width, height);\n      }\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function() {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n\n    isNeutralState: function() {\n      return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\n    }\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function(options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size:      0.60, // fontSize factor\n      baseline: -0.35  // baseline-shift factor (upwards)\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size:      0.60, // fontSize factor\n      baseline:  0.11  // baseline-shift factor (downwards)\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - charater numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, stlyes only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'deltaY',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + boxStart,\n            topOffset + lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n\n      this._setFillStyles(ctx, styleDeclaration);\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line number\n     * @param {Number} char the character number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function(line, char) {\n      return this.getValueOfPropertyAt(line, char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width, charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n          // emptylines\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset - offsets.offsetX,\n          top + lineHeights + maxHeight - offsets.offsetY,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n        ctx.restore();\n        return;\n      }\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function(start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function(start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function(start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.deltaY !== thisStyle.deltaY;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\n        prevStyle.overline !== thisStyle.overline ||\n        prevStyle.underline !== thisStyle.underline ||\n        prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width, line = this._textLines[lineIndex], lineInfo;\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the charater number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine, size, _size,\n          lineLeftOffset, dy, _dy,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(), top,\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill,\n          charSpacing = this._getWidthOfCharSpacing();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) &&\n              boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              top + this.offsets[type] * size + dy,\n              boxWidth,\n              this.fontSize / 15\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          leftOffset + lineLeftOffset + boxStart,\n          top + this.offsets[type] * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this, family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined ||\n      family.indexOf('\\'') > -1 ||\n      family.indexOf('\"') > -1 || fontIsGeneric\n        ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        fontFamily\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'underline',\n        'overline',\n        'linethrough',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing',\n      ].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\n          allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            }\n            else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          }\n          else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n      var len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n        ctx.save();\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        skipRestore || ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(), ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        this.clearContextTop(true);\n      }\n      else {\n        ctx = this.canvas.contextContainer;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top + dy,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            var charSpacing = this._getWidthOfCharSpacing();\n            boxEnd = this.__charBounds[endLine][endChar - 1].left\n              + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset + lineHeight,\n            boxEnd - boxStart,\n            1);\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset,\n            boxEnd - boxStart,\n            lineHeight);\n        }\n\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    parseDecoration(object);\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPostion),\n          cursorLocation = this.get2DCursorLocation(desiredPostion),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width,\n          upperCanvasHeight = upperCanvas.height,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          delete this.styles[lineIndex][index];\n        }\n      }\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      }\n      else {\n        delete this.styles[lineIndex + qty];\n      }\n      // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 1) {\n        qty--;\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objecs\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLenght = 0;\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLenght++;\n          addedLines[linesLenght] = 0;\n        }\n        else {\n          addedLines[linesLenght]++;\n        }\n      }\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLenght && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);\n      for (var i = 1; i < linesLenght; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        }\n        else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function(options) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n    if (this === this.canvas._activeObject) {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard hander for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function(options) {\n    this.__isMousedown = false;\n    if (!this.editable || this.group ||\n      (options.transform && options.transform.actionPerformed) ||\n      (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      }\n      else {\n        this.renderCursorOrSelection();\n      }\n    }\n    else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + 1;\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      }\n      else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      }\n      else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      }\n      else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft),\n          internalMarkup = this._wrapSVGTextAndBg(textAndBg);\n      return this._createBaseSVGMarkup(\n        internalMarkup, { reviver: reviver, noStyle: true, withShadow: true });\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\n        textAndBg.textSpans.join(''),\n        '</text>\\n'\n      ];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY, dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n      return [\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false;\n      var map = this._styleMap[lineIndex];\n      var mapNextLine = this._styleMap[lineIndex + 1];\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n      obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n    * probably broken need a fix\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * probably broken need a fix\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * probably broken need a fix\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth        = 0,\n          graphemeLines    = [],\n          line             = [],\n          // spaces in different languges?\n          words            = _line.split(this._reSpaceAndTab),\n          word             = '',\n          offset           = 0,\n          infix            = ' ',\n          wordWidth        = 0,\n          infixWidth       = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0;\n\n      desiredWidth -= reservedSpace;\n      for (var i = 0; i < words.length; i++) {\n        // i would avoid resplitting the graphemes\n        word = fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n    lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target;\n    if (by === 'x' && t instanceof fabric.Textbox) {\n      var tw = t._getTransformedDimensions().x;\n      var w = t.width * (localMouse.x / tw);\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n        return true;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n  });\n})();\n\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"],"sourceRoot":""}