{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/levels/level.js","webpack:///./src/player.js","webpack:///./src/game.js","webpack:///./src/theStairs.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","level","[object Object]","context","startX","startY","this","xBound","yBound","pathSize","pathX","pathY","pathStart","shuffle","path","pathGenerator","beginPath","length","rect","fillStyle","fill","moves","newMoves","slice","j","Math","floor","random","shuffledMoves","currentMove","validMove","push","workingMoves","currentMoveIndex","forEach","element","splice","indexOf","player","game","playerSize","playerX","playerY","playerSpeed","playerMoveRight","playerMoveLeft","playerMoveUp","playerMoveDown","document","addEventListener","keyDownHandler","keyUpHandler","e","keyCode","canMoveWest","canvasWidth","canMoveEast","canMoveNorth","canvasHeight","canMoveSouth","groundColor","playerDirection","playerDestination","checkBoundary","eastMove","getImageData","data","join","moveCheck","westMove","southMove","northMove","noScroll","draw","window","scrollTo","clearRect","fillRect","drawLevel","movePlayer","drawPlayer","requestAnimationFrame","bindKeys","gameCanvas","getElementById","getContext","currentGame","height","width","play"],"mappings":"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","file":"./dist/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Util from '../util';\n\nclass Level {\n    constructor(context, startX = 0, startY = 0) {\n        this.context = context;\n        this.xBound = 900;\n        this.yBound = 700;\n        this.pathSize = 100;\n        this.pathX = this.pathSize;\n        this.pathY = this.pathSize;\n        this.pathStart = [startX, startY];\n        this.shuffle = this.shuffle.bind(this);\n        // this.validPath = this.validPath.bind(this);\n        this.path = this.pathGenerator();\n    }\n\n    drawLevel() {\n        this.context.beginPath();\n        for (let i = 0; i < this.path.length; i++) {\n            this.context.rect(this.path[i][0], this.path[i][1], this.pathSize, this.pathSize);\n            this.context.fillStyle = \"rgb(224, 11, 64)\";\n            this.context.fill();\n        } \n    }\n\n    //shuffles moves w/ Fisher-Yates shuffle algo\n    shuffle(moves) {\n        let newMoves = moves.slice();\n        for (let i = moves.length - 1; i >= 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [newMoves[i], newMoves[j]] = [newMoves[j], newMoves[i]];\n        }\n        return newMoves;\n    }\n\n    pathGenerator() {\n        let path = [this.pathStart];\n        let moves = [[0, this.pathSize], [this.pathSize, 0], [-this.pathSize, 0], [0, -this.pathSize]];\n        // console.log(path[path.length - 1][0] + 100);\n        \n        while (path[path.length - 1][0] + 100 < this.xBound && path[path.length - 1][1] + 100 < this.yBound) {\n            let shuffledMoves = this.shuffle(moves);\n            // console.log(path);\n            let currentMove = this.validMove(path, shuffledMoves);\n            path = path.slice();\n            path.push(currentMove);\n            // console.log(path);\n            }\n\n        return path;\n    }\n\n    validMove(path, shuffledMoves) {\n        // remove out of bounds \n        let workingMoves = shuffledMoves.slice();\n        // workingMoves.forEach((element) => {\n        //     console.log(element);\n        // });\n        let currentMoveIndex = 0;\n        // for (let index = 0; index < workingMoves.length; index++) {\n        //     console.log(path[path.length - 1][0] + workingMoves[index][0], path[path.length - 1][1] + workingMoves[index][1])\n            // if ((path[path.length - 1][0] + workingMoves[index][0]) < 0 || (path[path.length - 1][1] + workingMoves[index][1]) < 0) {\n            //     workingMoves.splice(index, 1);\n            // }\n        // } \n        workingMoves.forEach((element) => {\n            if ((path[path.length - 1][0] + element[0]) < 0 || (path[path.length - 1][1] + element[1]) < 0) {\n                workingMoves.splice(workingMoves.indexOf(element), 1);\n            }\n        });\n        // console.log(\"working moves: \", workingMoves);\n        //check for path collision\n        let currentMove = [path[path.length - 1][0] + workingMoves[0][0], path[path.length - 1][1] + workingMoves[0][1]];\n        for (let j = 0; j < path.length; j++) {\n                if (path[j][0] === currentMove[0] && path[j][1] === currentMove[1]) {\n                    // console.log(\"in here\");\n                    // console.log(currentMoveIndex);\n                    currentMoveIndex++;\n                    // console.log(workingMoves[currentMoveIndex]);\n                    currentMove = [path[path.length - 1][0] + workingMoves[currentMoveIndex][0], path[path.length - 1][1] + workingMoves[currentMoveIndex][1]];\n            }\n        return currentMove;\n        }\n    }\n\n//END OF CLASS\n}\n    \n\n\nexport default Level;","import Level from './levels/level';\n\nclass Player {\n    constructor(game, name) {\n\n        //context\n        this.game = game;\n        this.context = game.context;\n\n        //Self\n        this.name = name;\n        this.playerSize = 10;\n        this.playerX = 0;\n        this.playerY = 0;\n        this.playerSpeed = 10;\n\n        //Keys\n        this.playerMoveRight = false;\n        this.playerMoveLeft = false;\n        this.playerMoveUp = false;\n        this.playerMoveDown = false;\n    }\n\n    drawPlayer() {\n        this.context.beginPath();\n        this.context.rect(this.playerX, this.playerY, this.playerSize, this.playerSize);\n        this.context.fillStyle = \"#e1e1e1\";\n        this.context.fill();\n    }\n\n    bindKeys() {\n        document.addEventListener(\"keydown\", this.keyDownHandler.bind(this));\n        document.addEventListener(\"keyup\", this.keyUpHandler.bind(this));\n    }\n\n    //Key handlers\n    keyDownHandler(e) {\n        if (e.keyCode === 39) {\n            this.playerMoveRight = true;\n        }\n        if (e.keyCode === 37) {\n            this.playerMoveLeft = true;\n        }\n        if (e.keyCode === 38) {\n            this.playerMoveUp = true;\n        }\n        if (e.keyCode === 40) {\n            this.playerMoveDown = true;\n        }\n    }\n\n    keyUpHandler(e) {\n        if (e.keyCode === 39) {\n            this.playerMoveRight = false;\n        }\n        if (e.keyCode === 37) {\n            this.playerMoveLeft = false;\n        }\n        if (e.keyCode === 38) {\n            this.playerMoveUp = false;\n        }\n        if (e.keyCode === 40) {\n            this.playerMoveDown = false;\n        }\n    }\n\n    movePlayer() {\n        if (this.playerMoveLeft && this.playerX > 0 && this.canMoveWest()) {\n            this.playerX -= this.playerSpeed;\n            }\n        else if (this.playerMoveRight && this.playerX < this.game.canvasWidth - 10 && this.canMoveEast()) {\n            this.playerX += this.playerSpeed;\n            }\n        else if  (this.playerMoveUp && this.playerY > 0 && this.canMoveNorth()) {\n            this.playerY -= this.playerSpeed;\n        }\n        else if (this.playerMoveDown && this.playerY < this.game.canvasHeight - 10 && this.canMoveSouth()) {\n            this.playerY += this.playerSpeed;\n        }\n    }\n\n    moveCheck(groundColor) {\n        if (groundColor !== \"224,11,64\") return false;\n        return true;\n    }\n\n    checkBoundary(playerDirection, playerDestination) {\n        if ((playerDirection === \"right\" && playerDestination >= this.game.canvasWidth - 10) \n            || (playerDirection === \"down\" && playerDestination >= this.game.canvasHeight - 10)) {\n            return true;\n        }\n        else return false;\n    }\n\n    canMoveEast() {\n        if (this.checkBoundary(\"right\", this.playerX + 11)) {\n            this.playerX = 0;\n            this.game.level = new Level(this.context, 0, this.playerY);\n        }\n        let eastMove = this.context.getImageData(this.playerX + 11, this.playerY, 1, 1).data.slice(0, 3).join(\",\");\n        return this.moveCheck(eastMove);\n    }\n\n    canMoveWest() {\n        let westMove = this.context.getImageData(this.playerX - 1, this.playerY, 1, 1).data.slice(0, 3).join(\",\");        \n        return this.moveCheck(westMove);\n    }\n\n    canMoveSouth() {\n        if (this.checkBoundary(\"down\", this.playerY + 11)) {\n            this.playerY = 0;\n            this.game.level = new Level(this.context, this.playerX, 0);\n        }\n        let southMove = this.context.getImageData(this.playerX, this.playerY + 11, 1, 1).data.slice(0, 3).join(\",\");        \n        return this.moveCheck(southMove);\n    }\n\n    canMoveNorth() {\n        let northMove = this.context.getImageData(this.playerX, this.playerY - 1, 1, 1).data.slice(0, 3).join(\",\");        \n        return this.moveCheck(northMove);\n    }\n\n// END OF CLASS\n}\n\nexport default Player;","import Player from './player';\nimport Level from './levels/level';\n\nclass Game {\n    constructor(context) {\n        this.context = context;\n        this.canvasHeight = 700;\n        this.canvasWidth = 900;\n        this.player = new Player(this, \"Nigel\");\n        this.level = new Level(this.context);\n        this.noScroll = this.noScroll.bind(this);\n        this.draw = this.draw.bind(this);\n    }\n\n    //THANKS DAVID WELLS (NOT THE FAMOUS YANKEE PRESUMABLY)\n    noScroll() {\n        window.scrollTo(0, 0);\n    }\n\n    draw() {\n        this.context.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.context.fillStyle = 'blue';\n        this.context.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.level.drawLevel();\n        this.player.movePlayer();\n        this.player.drawPlayer();\n        requestAnimationFrame(this.draw);\n    }\n\n    play() {\n        window.addEventListener(\"scroll\", this.noScroll);\n        this.player.bindKeys();\n        this.draw();\n    }\n\n// END OF CLASS\n}\n\nexport default Game;","import Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const gameCanvas = document.getElementById(\"game\");\n    const context = gameCanvas.getContext(\"2d\");\n    const currentGame = new Game(context);\n    gameCanvas.height = currentGame.canvasHeight;\n    gameCanvas.width = currentGame.canvasWidth;    \n    currentGame.play();\n});\n\n"],"sourceRoot":""}